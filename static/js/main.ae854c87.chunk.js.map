{"version":3,"sources":["../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","redux/modules/modification.js","redux/modules/referenceTables.js","redux/modules/ui.js","redux/modules/flows.js","constants.js","redux/modules/repoData.js","redux/modules/schemaValidation.js","components/SummaryTable.js","components/ContextTable.js","utils/formUtils.js","components/FieldInput.js","components/FormatCorrection.js","components/NewResourceRow.js","components/NewRICentityForm.js","components/ReferenceResourceForm.js","components/ForeignkeyCorrection.js","containers/DataModification/ModificationComponent.js","components/AlertModal.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","utils/fileExporter.js","components/GithubAuthModal.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","components/LeaveModificationModal.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js","../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$"],"names":["map","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./geojson.json","./table-schema.json","./topojson.json","START_MODIFICATION","initialState","foreignKeyField","modificationIndex","modificationList","createReducer","SET_STEP","state","action","payload","REVALIDATE_ROWS_SUCCESS","originalValue","fixedValues","forEach","item","index","field","value","split","objectSpread","fixed","fixedStatus","unchangable","currency","year","reporting","REVALIDATE_ROWS_FAILURE","rowNumbers","errorRowNumbers","errors","err","rowNumber","isEqual","fixedValue","existItem","find","HIDE_MODIFICATION","SELECT_ERROR","GO_NEXT_ERROR","GO_PREV_ERROR","SUBMIT_MODIFICATION","INIT_TABLES","FETCH_TABLES_SUCCESS","_ref","referenceTables","originalLength","csvParse","d","mapValues","v","k","length","DELETE_TABLE_ROW","_ref2","data","resourceName","newTable","slice","filter","row","some","r","ADD_TABLE_ROW","_ref3","splice","apply","concat","toConsumableArray","SHOW_CONFIRMATION_MODAL","HIDE_CONFIRMATION_MODAL","setStep","dispatch","type","steps","name","title","isModalDisplay","selectedStep","isModification","fixedIndex","IMPORT_FLOWS","UPDATE_FLOWS","fieldList","error","columnNumber","indexOf","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","partner","export_import|special_general","currency|year|reporting","LABEL_FIELDS_FK_SOLVED","export_import","special_general","NON_CHANGABLE_FIELDS","re","source_generic_slugify","fields","f","trim","w","capitalize","replace","join","SOURCE_SLUGIFY","source_category","SOURCE_SLUG_FIELDS","SOURCE_SUGGESTION_FIELDS","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_FAILURE","FETCH_BRANCHES_SUCCESS","LOGOUT_USER","LOGIN_CREATE_BRANCH_SUCCESS","LOGIN_CREATE_BRANCH_FAILURE","UPDATE_REMOTE_FILES_REQUEST","UPDATE_REMOTE_FILES_LOG","UPDATE_REMOTE_FILES_SUCCESS","UPDATE_REMOTE_FILES_FAILURE","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","getCollectedErrors","flows","schema","foreignKeys","allFields","foreignKeysList","formatFields","foreignKeysFields","foreignKey","errorTypes","formatErrors","reduce","res","defineProperty","errorType","foreignKeyErrors","joinedFields","originalRowNumber","selectedErrors","columnIndex","message","push","joinedColumn","columnName","values","schemaFeedback","headerFeedback","descriptor","getResourceName","schemaValidation","getResources","resources","getResourceSchema","createSelector","resource","group","getRelations","selectedResource","relations","key","tableName","reference","console","SummaryTable","className","onSelectError","columnNames","yearFormatValues","react_default","a","createElement","style","position","width","height","errorIndex","isNonchangableField","difference","handleSelectError","isCurrencyFixDisabled","isNull","components","fixedReferenceTable","table","isDisabled","isOutlined","isColor","onClick","ContextTable","modificationItem","errorColumn","rowIndex","errorColumnIndex","wordBreak","getEnumOptions","enumList","label","getOptions","tables","referenceField","sortedUniq","sortBy","FieldInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getStateFromProps","options","_this$props","fieldDescriptor","fieldValue","fieldSchema","Field","constraints","enum","fieldValid","valid","suggestions","validateField","castValue","setState","onChange","fieldName","handleChange","event","target","handleClickCreate","onClickCreate","referenceMap","onSuggestionsFetchRequested","suggestedOptions","inputValue","toLowerCase","inputLength","option","getSuggestions","onSuggestionsClearRequested","handleSuggestionChange","newValue","renderSuggestion","suggestion","prevProps","_this$props2","_this2","_this$props3","showNewReference","newReference","isNonchangable","isValidationField","_this$state","inputProps","placeholder","isReferenceField","generateValue","findIndex","react_select_browser_esm","isSearchable","isClearable","onInputChange","matchSorter","dist_default","getSuggestionValue","_this$state2","_this$props4","required","renderField","React","Component","FormatCorrection","hydrateState","showSolving","handleFieldChange","onTouch","handleSubmitForm","onSubmitForm","handleShowSolving","handleHideSolving","handleDiscard","onDiscard","printValue","isModificationTouched","isSubmitDisabled","components_FieldInput","isGrouped","isSize","renderOriginal","renderFixed","renderInput","NewResourceRow","overflow","RICname","continent","COW_code","NewRICentityForm","resourceDescriptor","handleChangeMulti","list","orderBy","multiParts","continentValue","continents","getContinent","fieldsInvalid","sortedFields","_this2$state$fields$f","isMulti","onCancel","newResource","part","RICname_group","RICname_part","onAddNew","castFormObject","formObject","ReferenceResourceForm","originalValues","prefixedValues","getSlug","preFields","slug","onSelectGroup","handleShowNew","handleHideNew","isRICentityGroup","handleCreateNewReference","resourceValid","handleAddNewReference","_this$state$reference","newRefReference","handleResetNewReference","handleSelectGroup","getReferenceDescriptor","handleAddNew","asyncToGenerator","regenerator_default","mark","_callee","_prefixedValues","rows","wrap","_context","prev","next","exchange_rates","modified_currency","Table","load","sent","read","forceCast","t0","stop","arguments","uniq","components_NewRICentityForm","components_NewResourceRow","ForeignKeyCorrection","initFixedValues","undefined","showNewForm","handleResetCreate","handleAddNewResource","special_field_for_label","handleCancel","handleSelectExist","i","referenceFieldResource","mapFieldValue","layoutColumn","getLayoutColumns","renderSolving","flex","components_ReferenceResourceForm","connect","validateResource","Resource","multiple","messages","onSubmitModification","handleSubmitModification","components_FormatCorrection","getFieldDescriptor","ForeignkeyCorrection","getForeignKeyField","components_ContextTable","AlertModal","isActive","closeModal","bodyContent","DataModification","handleTouchModification","touched","handleShowAlert","showAlert","handleHideAlert","nonFixedList","components_SummaryTable","selectError","display","justifyContent","currentIndex","DataModification_ModificationComponent","goNextError","hideModification","updateFlows","currencies","revalidateRows","prevFixedReferenceTable","deleteTableRow","addTableRow","submitModification","toString","marginLeft","goPrevError","components_AlertModal","modification","ui","status","_callee3","_context3","downloadFlow","array","fileName","ext","file","header","csvString","csvFormatRows","File","FileSaver","saveAs","sheet","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","downloadTable","csvFormat","GithubAuthModal","handleChangeToken","token","handleChangeMessage","handleSubmit","onSubmitAuth","isCommit","invalidInput","bloomer_min","DataPublish","handleOpenModal","isModalShow","handleCloseModal","repoData","selectedBranch","remoteUpdateStatus","lastCommit","remoteUpdateMessage","updatedTables","updatedRows","sources","keyBy","s","parsedFlows","groupedFlows","groupBy","deburr","href","owner","repoName","components_GithubAuthModal","auth","flowFiles","tableFiles","sha","updateRemoteFiles","files","branch","exportFlows","github","Octokat","repo","baseReference","flowRessourceMultipart","flowRessourceGroup","treeItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","exists","newRessource","_fileGit","_filePath","fileGit","tree","commit","repos","fetch","git","refs","Symbol","iterator","done","includes","get","repoRawContent","responseType","responseEncoding","response","path","log","blobs","create","content","Base64","encode","encoding","filePath","mode","t1","return","finish","JSON","stringify","trees","base_tree","object","commits","parents","update","t2","DataPrep","handleShowLogin","handleLogin","loginCreateBranch","isBranchCreated","fetchAllTables","isLogined","logoutUser","renderFetchTable","_callee2","userInfo","username","branches","refBranch","_context2","user","login","items","ref","then","tablesList","Promise","all","t","catch","HeaderValidation","diff","headerNames","fieldNames","diffLength","validationMap","Math","abs","prepareFlowData","FKFieldsIndices","fk","Array","isArray","set","FileUpload","importFlows","validateHeader","limit","headers","containers_DataPrep","maxSize","onDrop","slicedToArray","reject","reader","FileReader","onload","bstr","result","wsname","SheetNames","ws","Sheets","sheet_to_json","defval","blankrows","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","textAlign","components_HeaderValidation","OverviewTable","collectedErrors","orderedErrors","totalErrors","groupedErrors","distinctErrors","missingRows","SchemaValidation","validateTable","isRequiredFieldMissing","loader","components_OverviewTable","errorsList","groupedErrorsList","getGroupedErrors","startModification","_callee5","_context6","delegateYield","_callee4","tableLength","chunk","_loop","_context5","offset","chunkTable","chunkErrors","_context4","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isWorkspace","isSecondary","isPrimary","LeaveModificationModal","onSelectDiscard","onSelectDownload","showModal","hideModal","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","containers_DataPublish","renderChildren","components_LeaveModificationModal","Boolean","window","location","hostname","match","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae854c87.chunk.js","sourcesContent":["var map = {\n\t\"./data-package.json\": 1029,\n\t\"./data-resource.json\": 1030,\n\t\"./fiscal-data-package.json\": 1031,\n\t\"./registry.json\": 1032,\n\t\"./tabular-data-package.json\": 1033,\n\t\"./tabular-data-resource.json\": 1034\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1028;","var map = {\n\t\"./geojson.json\": 434,\n\t\"./table-schema.json\": 1120,\n\t\"./topojson.json\": 435\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1119;","import { createReducer } from 'redux-starter-kit';\nimport { isEqual} from 'lodash'\n\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n\nconst initialState = {\n  foreignKeyField: null,\n  modificationIndex: 0,\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n    state.modificationIndex = 0\n  },\n  REVALIDATE_ROWS_SUCCESS: (state, action) => {\n    // case 1: only year format error, no foreignkey error\n    const {payload} = action;\n    const {originalValue, fixedValues} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      if (item.field === 'currency|year|reporting' && item.value.split(\"|\")[1] === ''+originalValue) {\n        state.modificationList[index] = {\n          ...state.modificationList[index],\n          fixed: true,\n          fixedStatus: 'autoFixed',\n          unchangable: true,\n          fixedValues: {\n            'currency': item.value.split('|')[0],\n            'year': fixedValues['year'],\n            'reporting': item.value.split('|')[2]\n          }\n        }\n      }\n    })\n  },\n  REVALIDATE_ROWS_FAILURE: (state, action) => {\n    // case 2,3: voilation relations\n    const {payload} = action;\n    const {fixedValues, rowNumbers} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      const errorRowNumbers = item.errors.map((err) => err.rowNumber);\n      if (item.field === 'currency|year|reporting' && isEqual(errorRowNumbers, rowNumbers)) {\n        const fixedValue = item.value.split(\"|\")[0] + '|' + fixedValues['year'] + '|' + item.value.split(\"|\")[2];\n        const existItem = state.modificationList.find((item) => item.value === fixedValue)\n        if ( existItem && existItem.index !== index) {\n          // case 2: fixed formatted year rows values of (currency|year|reporting) are same with other rows\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: true,\n            fixedStatus: 'fixInOther',\n            unchangable: true,\n            fixedValues: {\n              'currency': item.value.split('|')[0],\n              'year': fixedValues['year'],\n              'reporting': item.value.split('|')[2]\n            }\n          }\n        } else {\n          // case 3: fixed formatted year rows are new combo of (currency|year|reporting)\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: false,\n            fixedStatus: 'notFixed',\n            unchangable: false,\n            value: fixedValue,\n            fixedValues: null\n          }\n        } \n      }\n    })\n  },\n  HIDE_MODIFICATION: (state, action) => {\n    state.modificationIndex = 0\n  },\n  SELECT_ERROR: (state, action) => {\n    const {payload} = action;\n    state.modificationIndex = payload.index;\n  },\n  GO_NEXT_ERROR: (state, action) => {\n    state.modificationIndex = state.modificationIndex + 1\n  },\n  GO_PREV_ERROR: (state, action) => {\n    if (state.modificationIndex > 0) {\n      state.modificationIndex = state.modificationIndex - 1\n    }\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      ...payload,\n      fixed: true\n    }\n  }\n})\n\n","import { createReducer } from 'redux-starter-kit';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {isEqual, mapValues} from 'lodash';\n\n\nexport const ADD_TABLE_ROW = 'ADD_TABLE_ROW';\nexport const INIT_TABLES = 'INIT_TABLES';\nexport const DELETE_TABLE_ROW = 'DELETE_TABLE_ROW';\n\nexport const initTables = () => ({\n  type: INIT_TABLES,\n})\n\nexport const addTableRow = (payload) => ({\n  type: ADD_TABLE_ROW,\n  payload\n})\n\nexport const deleteTableRow = (payload) => ({\n  type: DELETE_TABLE_ROW,\n  payload\n})\n\nconst initialState = {};\n\n\nexport default createReducer(initialState, {\n  INIT_TABLES: (state) => {\n    return initialState;\n  },\n  FETCH_TABLES_SUCCESS: (state, {payload}) => {\n    const referenceTables = {}\n    const originalLength = {}\n    Object.keys(payload).forEach((id) => {\n      // TODO : use datapackage to load those data\n      referenceTables[id] = csvParse(payload[id], (d) => {\n        const newD = mapValues(d, (v,k) => {\n          //cast year to integer\n          if (k === 'year')\n            return +v\n          // cast empty string to null (in datapackage '' default to missing value)\n          if (v === '')\n            return null\n          return v\n        });\n        return newD;\n      })\n      originalLength[id] = referenceTables[id].length\n    })\n    state.referenceTables = referenceTables;\n    state.originalLength = originalLength\n  },\n  DELETE_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    let newTable = state.referenceTables[resourceName].slice();\n    newTable = newTable.filter((row) =>{\n      return !data.some((r) => { return isEqual(row, r) })\n    });\n    state.referenceTables[resourceName] = newTable\n  },\n  ADD_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    const newTable = state.referenceTables[resourceName].slice();\n    newTable.splice(newTable.length, 0, ...data);\n    state.referenceTables[resourceName] = newTable;\n  },\n})","import {\n  START_MODIFICATION,\n} from './modification';\n\nimport {INIT_TABLES} from './referenceTables';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const SHOW_CONFIRMATION_MODAL = 'SHOW_CONFIRMATION_MODAL';\nexport const HIDE_CONFIRMATION_MODAL = 'HIDE_CONFIRMATION_MODAL';\n\nexport const setStep = (payload) => (dispatch) => {\n  if (payload.id === '0') {\n    dispatch({\n      type: INIT_TABLES\n    })\n  }\n  dispatch({\n    type: SET_STEP,\n    payload\n  });\n}\n\nexport const showModal = () => ({\n  type: SHOW_CONFIRMATION_MODAL\n})\n\nexport const hideModal = () => ({\n  type: HIDE_CONFIRMATION_MODAL\n})\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  isModalDisplay: false,\n  selectedStep: steps[0],\n  isModification: false,\n  // modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case SHOW_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: true\n      }\n    case HIDE_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: false\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        // modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: payload.index\n      }\n    // case GO_NEXT_ERROR:\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex + 1\n    //   }\n    // case GO_PREV_ERROR:\n    //   if (state.modificationIndex === 0) return;\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex - 1\n    //   }\n    default:\n     return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nexport const UPDATE_FLOWS = 'UPDATE_FLOWS';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\nexport const EXPORT_FLOWS = 'EXPORT_FLOWS';\n\nexport const updateFlows = (payload) => ({\n  type: UPDATE_FLOWS,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\nexport const exportFlows = (payload) => ({\n  type: EXPORT_FLOWS\n});\n\n\nconst initialState = {}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  IMPORT_FLOWS: (state, action) => {\n    const {payload} = action;\n    return payload\n  },\n  UPDATE_FLOWS: (state, action) => {\n    const {payload} = action;\n    const {errors, fixedValues} = payload;\n    const fieldList = Object.keys(fixedValues)\n    errors.forEach((error) => {\n      fieldList.forEach((field) => {\n        const columnNumber = state.data[0].indexOf(field);\n        state.data[error.rowNumber -1][columnNumber] = fixedValues[field];\n      })\n    })\n  }\n})\n","import {capitalize, deburr} from 'lodash';\n\nexport const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\nexport const DEFAULT_REF_BRANCH = 'master';\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"year\": 3,\n  \"species_bullions\": 4,\n  \"transport_type\": 5,\n  \"statistical_period\": 6,\n  \"partner_sum\": 7,\n  \"world_trade_type\": 8,\n  \"notes\": 9,\n  \"source\": 10,\n  \"reporting\": 11,\n  \"partner\": 12,\n  \"export_import|special_general\": 13,\n  \"currency|year|reporting\": 14\n}\n\nexport const LABEL_FIELDS_FK_SOLVED = {\n  'partner': 'RICname',\n  'reporting': 'RICname',\n  'currency': 'modified_currency',\n  'export_import': 'modified_export_import',\n  'special_general': 'modified_special_general'\n}\nexport const NON_CHANGABLE_FIELDS = ['slug', 'export_import', 'special_general', 'reporting', 'partner', 'original_name', 'currency', 'year']\n\nexport const SOURCE_SLUG_FIELDS = source => [ source.source_category === 'website' ? 'editor' : 'author','name', 'country', 'volume_date', 'volume_number', 'pages'];\n\nconst re = /[^a-zA-Z0-9]+/g;\nconst  source_generic_slugify = (source, fields) => fields.map(f => {\n  if (source[f]){\n    return source[f].trim().split(' ').map(w => capitalize(w.replace(re, ''))).join('')\n  }\n  else\n    return null;\n  \n}, '').filter(e => e).join('_');\n\nexport const SOURCE_SLUGIFY = source => source_generic_slugify(source, SOURCE_SLUG_FIELDS(source))\n\nexport const SOURCE_SLUG_FILENAME = source => deburr(source_generic_slugify(source,\n  [ source.source_category === 'website' ? 'editor' : 'author','name', 'country', 'volume_date', 'volume_number']));\n\nexport const SOURCE_SUGGESTION_FIELDS = ['name', 'editor', 'country', 'volumn_number', 'shelf_number']","import { get, post } from \"axios\";\nimport {\n  apiUri,\n  branchUri,\n  referenceUri,\n  owner,\n  repoName,\n  repoRawContent,\n} from \"../../config/default\";\nimport { DEFAULT_REF_BRANCH } from \"../../constants\";\n\nimport Octokat from \"octokat\";\n\nimport { Base64 } from \"js-base64\";\nimport { csvFormat, csvParse } from \"d3-dsv\";\n\nimport { INIT_TABLES } from \"./referenceTables\";\n\nexport const FETCH_TABLE_REQUEST = \"FETCH_TABLE_REQUEST\";\nexport const FETCH_TABLE_SUCCESS = \"FETCH_TABLE_SUCCESS\";\nexport const FETCH_TABLE_FAILURE = \"FETCH_TABLE_FAILURE\";\n\nexport const FETCH_DATAPACKAGE_REQUEST = \"FETCH_DATAPACKAGE_REQUEST\";\nexport const FETCH_DATAPACKAGE_SUCCESS = \"FETCH_DATAPACKAGE_SUCCESS\";\nexport const FETCH_DATAPACKAGE_FAILURE = \"FETCH_DATAPACKAGE_FAILURE\";\n\nexport const FETCH_TABLES_REQUEST = \"FETCH_TABLES_REQUEST\";\nexport const FETCH_TABLES_SUCCESS = \"FETCH_TABLES_SUCCESS\";\nexport const FETCH_TABLES_FAILURE = \"FETCH_TABLES_FAILURE\";\n\nexport const FETCH_BRANCHES_REQUEST = \"FETCH_BRANCHES_REQUEST\";\nexport const FETCH_BRANCHES_SUCCESS = \"FETCH_BRANCHES_SUCCESS\";\nexport const FETCH_BRANCHES_FAILURE = \"FETCH_BRANCHES_FAILURE\";\n\nexport const CREATE_BRANCH_REQUEST = \"CREATE_BRANCH_REQUEST\";\nexport const CREATE_BRANCH_SUCCESS = \"CREATE_BRANCH_SUCCESS\";\nexport const CREATE_BRANCH_FAILURE = \"CREATE_BRANCH_FAILURE\";\n\nexport const LOGOUT_USER = \"LOGOUT_USER\";\n\nexport const LOGIN_CREATE_BRANCH_REQUEST = \"LOGIN_CREATE_BRANCH_REQUEST\";\nexport const LOGIN_CREATE_BRANCH_SUCCESS = \"LOGIN_CREATE_BRANCH_SUCCESS\";\nexport const LOGIN_CREATE_BRANCH_FAILURE = \"LOGIN_CREATE_BRANCH_FAILURE\";\n\nexport const UPDATE_REMOTE_FILES_REQUEST = \"UPDATE_REMOTE_FILES_REQUEST\";\nexport const UPDATE_REMOTE_FILES_LOG = \"UPDATE_REMOTE_FILES_LOG\";\nexport const UPDATE_REMOTE_FILES_SUCCESS = \"UPDATE_REMOTE_FILES_SUCCESS\";\nexport const UPDATE_REMOTE_FILES_FAILURE = \"UPDATE_REMOTE_FILES_FAILURE\";\n\nconst DEFAULT_MESSAGE = \"update data\";\n/**\n * ACTIONS\n */\n\nexport const fetchBranches = (payload) => (dispatch) => {\n  dispatch({\n    type: FETCH_BRANCHES_REQUEST,\n    payload,\n  });\n  return get(branchUri)\n    .then((res) => {\n      return dispatch({\n        type: FETCH_BRANCHES_SUCCESS,\n        payload: {\n          ...payload,\n          branches: res.data,\n        },\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: FETCH_BRANCHES_FAILURE,\n        payload,\n        error,\n      })\n    );\n};\n\nexport const fetchTable = (payload) => (dispatch) => {\n  const { branch, table } = payload;\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload,\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) =>\n      dispatch({\n        type: FETCH_TABLE_SUCCESS,\n        payload: {\n          ...payload,\n          data: res.data,\n        },\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: FETCH_TABLE_FAILURE,\n        payload,\n        error,\n      })\n    );\n};\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const { branch } = payload;\n  // let's get the datapackage from the branch\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  try {\n    get(`${repoRawContent}/${branch}/datapackage.json`, {\n      responseType: \"json\",\n      responseEncoding: \"utf8\",\n    }).then((res) => {\n      const descriptor = res.data;\n      const tablesList = descriptor.resources.filter(\n        (r) => !r.group && r.name !== \"flows\"\n      );\n      dispatch({\n        type: FETCH_DATAPACKAGE_SUCCESS,\n        payload: descriptor,\n      });\n      // now we can get tables\n      dispatch({\n        type: FETCH_TABLES_REQUEST,\n      });\n      Promise.all(\n        tablesList.map((table) => {\n          return get(`${repoRawContent}/${branch}/${table.path}`, {\n            responseType: \"text\",\n            responseEncoding: \"utf8\",\n          }).then((res) => {\n            return { ...table, data: res.data };\n          });\n        })\n      )\n        .then((res) => {\n          let tables = {};\n          res.forEach((t) => {\n            tables[t.name] = t.data;\n          });\n          dispatch({\n            type: FETCH_TABLES_SUCCESS,\n            payload: tables,\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n          dispatch({\n            type: FETCH_TABLES_FAILURE,\n            payload,\n            error,\n          });\n        });\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error,\n    });\n  }\n};\n\nexport const updateRemoteFiles = (payload) => (dispatch) => {\n  dispatch({\n    type: UPDATE_REMOTE_FILES_REQUEST,\n  });\n  const { files, branch, auth, descriptor } = payload;\n\n  const github = new Octokat({\n    token: auth.token,\n  });\n\n  dispatch(async () => {\n    try {\n      let repo = await github.repos(owner, repoName).fetch();\n      let baseReference = await repo.git.refs(`heads/${branch}`).fetch();\n      let flowRessourceMultipart = descriptor.resources.find(\n        (r) => r.name === \"flows\"\n      );\n      let flowRessourceGroup = descriptor.resources.find(\n        (r) => r.group === \"flows\"\n      );\n      let treeItems = [];\n      for (let file of files) {\n        if (!file.sha && file.fileName.includes(\"flows\")) {\n          //new file flow ?\n          //check if file already exists\n          dispatch({\n            type: UPDATE_REMOTE_FILES_LOG,\n            payload: `downloading existing flows file ${file.fileName}`,\n          });\n          try {\n            const exists = await get(\n              `${repoRawContent}/${branch}/data/${file.fileName}`,\n              { responseType: \"text\", responseEncoding: \"utf8\" }\n            );\n            if (exists.status === 200) {\n              // append new rows at end of the existing file\n              file.data = csvParse(exists.data).concat(file.data);\n            }\n          } catch (error) {\n            if (error.response && error.response.status === 404) {\n              // that's a 404 error which is fine\n              // it's a new file, add it to the datapackage see issue #70\n              if (flowRessourceMultipart) {\n                flowRessourceMultipart.path.push(`data/${file.fileName}`);\n              } else if (flowRessourceGroup) {\n                const newRessource = { ...flowRessourceGroup };\n                newRessource.path = `/data/${file.fileName}`;\n                newRessource.title = file.source;\n                descriptor.resources.push(newRessource);\n              }\n            } else console.log(error);\n            dispatch({\n              type: UPDATE_REMOTE_FILES_FAILURE,\n              error,\n            });\n          }\n        }\n        dispatch({\n          type: UPDATE_REMOTE_FILES_LOG,\n          payload: `uploading ${file.fileName}`,\n        });\n        let fileGit = await repo.git.blobs.create({\n          content: Base64.encode(csvFormat(file.data) + \"\\n\"),\n          encoding: \"base64\",\n        });\n        let filePath = `data/${file.fileName}`;\n        treeItems.push({\n          path: filePath,\n          sha: fileGit.sha,\n          mode: \"100644\",\n          type: \"blob\",\n        });\n      }\n      // commit new version of the datapackage\n      dispatch({\n        type: UPDATE_REMOTE_FILES_LOG,\n        payload: `uploading datapackage`,\n      });\n      let fileGit = await repo.git.blobs.create({\n        content: Base64.encode(JSON.stringify(descriptor, null, 2)),\n        encoding: \"base64\",\n      });\n      let filePath = `datapackage.json`;\n      treeItems.push({\n        path: filePath,\n        sha: fileGit.sha,\n        mode: \"100644\",\n        type: \"blob\",\n      });\n      dispatch({\n        type: UPDATE_REMOTE_FILES_LOG,\n        payload: `creating tree`,\n      });\n      let tree = await repo.git.trees.create({\n        tree: treeItems,\n        base_tree: baseReference.object.sha,\n      });\n      dispatch({\n        type: UPDATE_REMOTE_FILES_LOG,\n        payload: `creating commit`,\n      });\n      let commit = await repo.git.commits.create({\n        message: auth.message || DEFAULT_MESSAGE,\n        tree: tree.sha,\n        parents: [baseReference.object.sha],\n      });\n\n      baseReference.update({ sha: commit.sha });\n      dispatch({\n        type: UPDATE_REMOTE_FILES_SUCCESS,\n        payload: commit.sha,\n      });\n    } catch (err) {\n      console.error(err);\n      dispatch({\n        type: UPDATE_REMOTE_FILES_FAILURE,\n        err,\n      });\n    }\n  });\n};\n\nexport const createBranch = (payload) => (dispatch) => {\n  dispatch({\n    type: CREATE_BRANCH_REQUEST,\n  });\n\n  const { auth, branch, reference } = payload;\n  const data = {\n    ref: `refs/heads/${branch}`,\n    sha: reference.sha,\n  };\n\n  return post(referenceUri, data, {\n    auth: {\n      username: auth.username,\n      password: auth.token,\n    },\n  })\n    .then((res) =>\n      dispatch({\n        type: CREATE_BRANCH_SUCCESS,\n        payload: {\n          name: auth.username,\n          ref: res.data,\n        },\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: CREATE_BRANCH_FAILURE,\n        error,\n      })\n    );\n};\n\nexport const logoutUser = () => ({\n  type: LOGOUT_USER,\n});\n\nexport const loginCreateBranch = (payload) => (dispatch) => {\n  dispatch({\n    type: LOGIN_CREATE_BRANCH_REQUEST,\n    payload,\n  });\n  const { token } = payload;\n\n  const github = new Octokat({\n    token: token,\n  });\n\n  dispatch(async () => {\n    try {\n      let userInfo = await github.user.fetch();\n      const username = userInfo.login;\n      let repo = await github.repos(owner, repoName).fetch();\n      let branches = await repo.branches.fetch();\n      let selectedBranch = branches.items.find(\n        (branch) => branch.name === username\n      );\n      if (!selectedBranch) {\n        const refBranch = branches.items.find(\n          (branch) => branch.name === DEFAULT_REF_BRANCH\n        );\n        selectedBranch = await repo.git.refs.create({\n          ref: `refs/heads/${username}`,\n          sha: refBranch.commit.sha,\n        });\n      }\n      dispatch({\n        type: LOGIN_CREATE_BRANCH_SUCCESS,\n        payload: {\n          name: username,\n          ref: selectedBranch,\n        },\n      });\n    } catch (error) {\n      console.error(error);\n      dispatch({\n        type: LOGIN_CREATE_BRANCH_FAILURE,\n        payload: {\n          error,\n        },\n      });\n    }\n  });\n};\n\n/**\n * REDUCER\n */\n\nconst initialState = {};\n\nexport default function reducer(state = initialState, action) {\n  const { payload } = action;\n  switch (action.type) {\n    case LOGOUT_USER:\n      return {\n        ...state,\n        isLogined: false,\n        tables: null,\n        selectedBranch: null,\n        isBranchCreated: false,\n      };\n    case INIT_TABLES:\n      return {\n        ...state,\n        tables: null,\n        remoteUpdateStatus: null,\n      };\n    case FETCH_TABLES_SUCCESS:\n      return {\n        ...state,\n        tables: payload,\n      };\n    case FETCH_TABLES_FAILURE:\n      return {\n        ...state,\n        tables: null,\n      };\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: payload,\n      };\n    case FETCH_BRANCHES_SUCCESS:\n      return {\n        ...state,\n        branches: payload.branches,\n      };\n    case LOGIN_CREATE_BRANCH_SUCCESS:\n      return {\n        ...state,\n        isLogined: true,\n        selectedBranch: payload,\n        isBranchCreated: true,\n      };\n    case LOGIN_CREATE_BRANCH_FAILURE:\n      return {\n        ...state,\n        isLogined: false,\n        selectedBranch: null,\n        isBranchCreated: false,\n      };\n    case UPDATE_REMOTE_FILES_REQUEST:\n      return {\n        ...state,\n        remoteUpdateStatus: \"loading\",\n        lastCommit: null,\n        remoteUpdateMessage: null,\n      };\n    case UPDATE_REMOTE_FILES_LOG:\n      return {\n        ...state,\n        remoteUpdateStatus: \"loading\",\n        remoteUpdateMessage: payload,\n      };\n    case UPDATE_REMOTE_FILES_SUCCESS:\n      return {\n        ...state,\n        remoteUpdateStatus: \"updated\",\n        lastCommit: payload,\n      };\n    case UPDATE_REMOTE_FILES_FAILURE:\n      return {\n        ...state,\n        remoteUpdateStatus: \"fail\",\n      };\n    default:\n      return state;\n  }\n}\n","import { createSelector } from 'reselect'\n\nimport {groupBy, sortBy, values } from 'lodash';\nimport {Resource} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {SET_STEP} from './ui';\n\nimport {DEFAULT_CHUNK_SIZE, RANKED_FIELDS} from '../../constants';\n\nimport {\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\nexport const REVALIDATE_ROWS_REQUEST = 'REVALIDATE_ROWS_REQUEST';\nexport const REVALIDATE_ROWS_SUCCESS = 'REVALIDATE_ROWS_SUCCESS';\nexport const REVALIDATE_ROWS_FAILURE = 'REVALIDATE_ROWS_FAILURE';\n\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\n// const getForeignKeyFields = (fields) => {\n//   return fields.reduce((res, field) => {\n//     if (typeof(field) === 'string') return res.concat([field]);\n//     else return res.concat(field)\n//   }, []);\n// } \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  // const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n  // TODO: hardcoded\n  const foreignKeysList = [\"source\", \"export_import\", \"special_general\", \"currency\"];\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const {rowNumber, originalRowNumber} = error;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                originalRowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  if (formatErrors['reporting'] || formatErrors['partner']) {\n    return formatErrors\n  }\n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      // const dataPackage = await Package.load(descriptor);\n      // resource = dataPackage.getResource(resourceName);\n      resource = Resource.load(descriptor);\n      await resource.read()\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nexport const revalidateRows = (payload) => (dispatch) => {\n  const {rowNumbers, originalValue, fixedValues, source, schema, relations} = payload;\n\n  dispatch({\n    type: REVALIDATE_ROWS_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source, {schema});\n      const rows = await table.read({forceCast: true, relations});\n      const errors = rows.filter((row) => row.errors);\n\n      if (errors.length) {\n        dispatch({\n          type: REVALIDATE_ROWS_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      } else {\n        dispatch({\n          type: REVALIDATE_ROWS_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: REVALIDATE_ROWS_FAILURE,\n        payload: {\n          status: 'done',\n          valid: false,\n          error\n        }\n      })\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => {\n            error.rowNumber = error.rowNumber + chunk * offset - offset\n          });\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  resourceName: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  descriptor: null,\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state;\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: payload\n      }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\nconst getResourceName = state => state.schemaValidation.resourceName;\nconst getResources = state => state.schemaValidation.descriptor.resources;\nconst getTables = state => state.referenceTables.referenceTables;\n\nconst re = /row\\s\\d*/;\nexport const getGroupedErrors = (collectedErrors) => {\n  const errorsList = values(collectedErrors).reduce((res, item) => {\n    return res.concat(item.errors)\n  },[]);\n\n  const groupedErrorsList = \n    values(groupBy(errorsList,(v) => v.field + v.value))\n    .map((errors, index)=> {\n      // const fieldName = errors[0].field;\n      // let yearRange;\n      // if (fieldName === 'currency|year|reporting') {\n      //   const years = uniq(errors.map((error) => error.value.split('|')[1]));\n      //   yearRange = years.length > 1 ? `${min(years)}-${max(years)}` : years[0]\n      // }\n      // const value = fieldName !== 'currency|year|reporting' ? errors[0].value : `${errors[0].value.split('|')[0]}|${yearRange}|${errors[0].value.split('|')[2]}`\n      return {\n        index,\n        field: errors[0].field,\n        errorType: errors[0].errorType,\n        fixed: false,\n        message: errors[0].message.replace(re, `${errors.length} rows`),\n        originalValue: errors[0].value,\n        value: errors[0].value, \n        errors\n      }\n    });\n  return sortBy(groupedErrorsList, (field) => {\n    return RANKED_FIELDS[field.name]\n  });\n}\n\n/** \n* SELECTORS\n*/\n\n\nexport const getResourceSchema = createSelector(\n  getResourceName,\n  getResources,\n  (resourceName, resources) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName || (resource.group === resourceName && resource.schema));\n    return selectedResource.schema\n})\n\nexport const getRelations = createSelector(\n  getResourceName,\n  getResources,\n  getTables,\n  (resourceName, resources, referenceTables) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName || (resource.group === resourceName && resource.schema));\n    const relations = {};\n    if (!selectedResource) {\n      console.error(`the resource ${resourceName} could not be found!`)\n      return {};\n    }\n    if (selectedResource.schema) {\n      if (selectedResource.schema.foreignKeys) {\n        selectedResource.schema.foreignKeys.forEach((key) => {\n          const tableName = key.reference.resource;\n          relations[tableName] = referenceTables[tableName]\n        });\n        return relations;\n      }\n      else\n        return {};\n    }\n    else {\n      console.error(`the resource ${selectedResource.name} has no schema !`);\n      return {};\n    }\n  })","import React from 'react';\nimport {isNull, values, difference} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\nimport {NON_CHANGABLE_FIELDS} from '../constants'\n\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', ''];\n  const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors,originalValue, value, message, fixed, fixedValues} = item;\n              const fixedValue = values(fixedValues).join('|');\n\n              const isNonchangableField = difference(NON_CHANGABLE_FIELDS, field.split('|')).length < NON_CHANGABLE_FIELDS.length\n\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n              let isCurrencyFixDisabled = false;\n              if (item.field === 'currency|year|reporting' && yearFormatValues.indexOf(item.value.split('|')[1]) !== -1) {\n                isCurrencyFixDisabled = true\n              }\n\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              {originalValue !== value && <span className=\"has-text-danger\">{originalValue}-></span>}\n                              <span className=\"has-text-danger\">{isNull(value)? 'none' : value }</span>\n                              {fixed && <span className=\"has-text-success\">->{fixedValue === ''?'none': fixedValue}</span>}\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <p className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed && !isNonchangableField ? 'rows updated' : ''}</p>\n                              {\n                                item.fixedReferenceTable && item.fixedReferenceTable.length>0 &&\n                                  (\n                                    item.fixedReferenceTable.map((table, index)=> {\n                                      return (\n                                        <p key={index} className=\"has-text-success\">{table.data.length} row(s) added to \"{table.resourceName}\" table</p>\n                                      )\n                                    })\n                                  )\n                              }\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isDisabled={isCurrencyFixDisabled} isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field, value, fixedValues} = modificationItem;\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'} style={{height: '100%'}}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n                        let fixedValue;\n                        const errorColumnIndex = field.split('|').indexOf(columnName);\n                        let originalValue = (''+value).split('|')[errorColumnIndex];\n                        if (columnName === 'year' && errorColumnIndex===1) {\n                          originalValue = flows[error.rowNumber - 1][columnIndex]\n                        }\n                        if (fixedValues && errorColumn) {\n                          fixedValue = fixedValues[columnName].length === 0 ? 'none' : fixedValues[columnName];\n                        }\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {errorColumn ? originalValue: flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                          {\n                            fixedValue && \n                              <span  className=\"has-text-success\">->{fixedValue}</span>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","import {sortedUniq, sortBy} from 'lodash';\n\nexport const getEnumOptions = (enumList) => {\n  const options = enumList.map((e) => {\n    return {\n      label: e,\n      value: e\n    }\n  })\n  return options\n}\n\nexport const getOptions = ({tables, resourceName, referenceField, filter}) => {\n  let values;\n  if (filter) {\n    values = tables[resourceName]\n            .filter((item) => item[filter.field] !== filter.value)\n            .map((item) => item[referenceField])\n  }\n  else {\n    values = tables[resourceName].map((item) => item[referenceField])\n  }\n\n  const uniqValues = sortedUniq(sortBy(values, v => v.length));\n  return uniqValues.map((item) => {\n    return {\n      value: item,\n      label: item\n    }\n  })\n}","\nimport React from 'react';\n\nimport {Field} from 'tableschema';\nimport {findIndex} from 'lodash';\n\nimport Select from 'react-select';\nimport Autosuggest from 'react-autosuggest';\n\nimport matchSorter from 'match-sorter';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n} from 'design-workshop'\n\n\nimport {getEnumOptions, getOptions} from '../utils/formUtils';\n\n\nclass FieldInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps();\n  }\n\n  componentDidUpdate (prevProps) {\n    const {fieldDescriptor, fieldValue, fixedValue} = this.props;\n    if (fieldDescriptor.name === 'slug' && fieldValue !== prevProps.fieldValue) {\n      this.validateField(fieldValue)\n    }\n    if (fixedValue !== prevProps.fixedValue && !fixedValue) {\n      const state = this.getStateFromProps();\n      this.setState({\n        ...state\n      })\n    }\n  }\n\n  getStateFromProps = () => {\n    const {fieldDescriptor, fieldValue} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n    \n    let options;\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum)\n    }\n    return {\n      fieldSchema,\n      value: fieldValue || '',\n      fieldValid: {\n        valid: false\n      },\n      options,\n      suggestions: []\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    let payload\n    try {\n      fieldSchema.castValue(value);\n      payload  = {\n        value,\n        fieldValid: {\n          valid: true\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      })\n    } catch(error) {\n      payload = {\n        value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    let value;\n    if(!event) {\n      value = '';\n      this.validateField(value);\n    }\n    else if(event && event.value) {\n      this.validateField(event.value);\n    }\n    else if (event && event.target) {\n      this.validateField(event.target.value);\n    }\n    else {\n      this.validateField('')\n    }\n  }\n\n  handleClickCreate = () => {\n    const field = this.props.foreignKeys.find((f) => f.fields === this.state.fieldSchema.name);\n    this.handleChange('');\n    this.props.onClickCreate({\n      referenceMap: {\n        field: this.state.fieldSchema.name,\n        referenceField: field ? field.reference.fields : this.state.fieldSchema.name\n      }\n    })\n  }\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = (value, suggestedOptions) => {\n    const getSuggestions = (value, options) => {\n      const inputValue = value.trim().toLowerCase();\n      const inputLength = inputValue.length;\n\n      return inputLength === 0 ? [] : options.filter(option =>\n        option.toLowerCase().slice(0, inputLength) === inputValue\n      );\n    };\n    this.setState({\n      suggestions: getSuggestions(value, suggestedOptions)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  handleSuggestionChange =  (event, { newValue }) => {\n    this.validateField(newValue)\n  };\n\n\n  // Use your imagination to render suggestions.\n  renderSuggestion = suggestion => (\n    <div>\n      {suggestion}\n    </div>\n  );\n\n\n  renderField() {\n    const {fieldValue, foreignKeys, referenceTables, showNewReference, newReference, isNonchangable, isValidationField, suggestedOptions} = this.props;\n    const {fieldSchema, value, suggestions} = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: '',\n      value,\n      onChange: this.handleSuggestionChange\n    };\n\n    let isReferenceField = false;\n    \n    const handleSuggestionsFetchRequested = ({value}) => {\n      this.onSuggestionsFetchRequested(value, suggestedOptions)\n    }\n    let options;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    if (findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1) !== -1) {\n      const index = findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1)\n      const referenceField = foreignKeys[index].reference.fields;\n      isReferenceField = true;\n      \n      options = getOptions({\n        tables: referenceTables,\n        resourceName: foreignKeys[index].reference.resource,\n        referenceField: typeof(referenceField) === 'object' ? referenceField[0]: referenceField\n      });\n    }\n\n    if (isNonchangable) {\n      return (<span>{fieldValue}</span>)\n    }\n    else if (isReferenceField) {\n      return (\n        <div>\n          {\n            !showNewReference && !newReference &&\n            <Select isSearchable={true}\n              isClearable={true}\n              value={generateValue(value)}\n              options={this.state.options}\n              onChange={this.handleChange} \n              onInputChange={inputValue => {\n                this.setState({ options : (matchSorter(options, inputValue, {keys: ['label']}).slice(0,50))});\n              }}\n              />\n          }\n          {\n            newReference &&\n            <div>{fieldValue}</div>\n          }\n          {\n            (!this.state.value || isValidationField)  &&\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n          } \n        </div>\n      )\n    }\n    else if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      return (\n        <Select isClearable={true}\n        value= {generateValue(value)}\n        options={this.state.options}\n        onChange={this.handleChange} />\n      )\n    }\n    else if (suggestedOptions) {\n      return <Autosuggest\n      suggestions={suggestions}\n      onSuggestionsFetchRequested={handleSuggestionsFetchRequested}\n      onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n      getSuggestionValue={(value) => value}\n      renderSuggestion={this.renderSuggestion}\n      inputProps={inputProps} />\n    }\n    else {\n      return (\n        <Input\n        value={value}\n        onChange={this.handleChange} />\n      )\n    }\n  }\n\n  render() {\n    const {fieldSchema, fieldValid} = this.state;\n    const {showNewReference, newReference} = this.props;\n    return (\n      <FieldContainer>\n        <Label>\n          {fieldSchema.name}\n          {\n            fieldSchema.constraints && fieldSchema.constraints.required &&\n            <span>*</span>\n          }\n        </Label>\n        <Control>\n          {this.renderField()}\n        </Control>\n        {\n          fieldValid && fieldValid.error && !showNewReference && !newReference &&\n            <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n        }\n      </FieldContainer> \n    )\n  }\n}\n\nexport default FieldInput;","import React from 'react';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop'  \n\nimport FieldInput from './FieldInput';\n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState();\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      });\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    return {\n      fixedValue: null,\n      showSolving: !modificationItem.fixed,\n      fieldValid: null\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {value, fieldValid} = payload;\n    this.props.onTouch(true)\n    this.setState({\n      fixedValue: value,\n      fieldValid\n    })\n  }\n\n\n  handleSubmitForm = () => {\n    const {modificationItem} = this.props;\n    const {fixedValue, fieldValid} = this.state;\n    if(!fieldValid || !fieldValid.valid) return;\n    const fixedValues = {\n      [modificationItem.field]: fixedValue\n    }\n    this.props.onSubmitForm({fixedValues});\n  }\n\n  handleShowSolving = () => {\n    this.props.onTouch(true)\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.props.onTouch(false)\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  handleDiscard = () => {\n    this.props.onTouch(false);\n    const state = this.hydrateState()\n    this.setState({\n      ...state\n    });\n    this.props.onDiscard()\n  }\n\n  renderOriginal() {\n    const {modificationItem} = this.props;\n    const {value, message, field}= modificationItem;\n\n    return (\n      <FieldContainer>\n        <Label>Original value of \"{field}\":</Label>\n        <strong>{value.length === 0 ? 'none': value}</strong>\n        <Help isColor=\"danger\">{message}</Help>\n      </FieldContainer>\n    )\n  }\n\n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {fixedValues, field, errors}= modificationItem;\n    const printValue = fixedValues[field].length === 0 ? 'none' : fixedValues[field];\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">total {errors.length} rows affected</Help>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderInput() {\n    const {modificationItem, fieldDescriptor, isModificationTouched} = this.props;\n    const {fieldValid} = this.state;\n    const isSubmitDisabled = !fieldValid || !fieldValid.valid\n\n    return (\n      <div>\n        <Label>Fix with a new input</Label>\n        <FieldInput \n          isNonchangable={false}\n          fieldDescriptor={fieldDescriptor} \n          fieldValue={modificationItem.value}\n          fixedValue={this.state.fixedValue}\n          onChange={this.handleFieldChange} />\n          \n        <FieldContainer isGrouped>  \n          {/*\n             modificationItem.fixed &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n            </Control>\n          */}\n          {\n            isModificationTouched &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleDiscard}>Discard modification</Button>\n            </Control>\n          }\n          <Control>\n            <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {fixed}= modificationItem;\n    \n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize=\"1/2\">\n              {this.renderOriginal()}\n              {\n                fixed && !this.state.showSolving && this.renderFixed()\n              }\n              {\n                this.state.showSolving && this.renderInput()\n              }\n\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","import React from 'react';\nimport {\n  Label,\n} from 'design-workshop'\nconst NewResourceRow = ({resource}) => { \n  const {data, resourceName} = resource;\n  return (\n    <div style={{height: '40vh', overflow:'auto'}}>\n      <h3>{data.length} row(s) add to \"{resourceName}\" table</h3>\n      {\n        data.map((row)=> {\n          return (\n            Object.keys(row).map((key) => {\n              return (\n                <div key={key}>\n                  <Label>{key}:</Label>\n                  <p>{row[key]}</p>\n                </div>\n              )\n            })\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default NewResourceRow;","import React from 'react';\n\nimport {values, mapValues, sortBy, orderBy} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help\n} from 'design-workshop';\nimport Select from 'react-select';\n\nimport {getOptions} from '../utils/formUtils';\n\nimport FieldInput from './FieldInput';\n\nconst RANKED_FIELDS = {\n  \"type\": 0,\n  'RICname': 1,\n  \"continent\": 2,\n  \"COW_code\": 3\n}\n\nclass NewRICentityForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      // TODO: hardcoded\n      if (field.name === 'type') {\n        value = 'group';\n      }\n      if (field.name === 'continent') {\n        value = ''\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleChangeMulti = (event) => {\n    const {referenceTables} = this.props;\n    const table = referenceTables['ricentities'];\n\n    const getRICname = (list) => {\n      const orderedList = orderBy(list, [item => item.value.toLowerCase()], ['asc'])\n      return orderedList.map((item) => item.value).join(' & ');\n    }\n\n    const getContinent = (list, table) => {\n      const continents = list.map((item) => {\n        const findRow = table.find((row) => row['RICname'] === item.value);\n        return findRow.continent\n      });\n      if (continents.length > 1) return 'World';\n      else if (continents.length === 1) return continents[0];\n      return null;\n    }\n\n    const value = event ? getRICname(event) : '';\n    const multiParts = event ? event : [];\n    const continentValue = event ? getContinent(multiParts, table) : null;\n\n    // mockup validation\n    this.setState({\n      multiParts,\n      fields: {\n        ...this.state.fields,\n        RICname: {\n          fieldName: 'RICname',\n          value,\n          fieldValid:{\n            valid: value ==='' ? false: true,\n            error: value === ''? {message: 'field is required'} : null\n          }\n        },\n        continent: {\n          fieldName: 'continent',\n          value: continentValue,\n          fieldValid:{\n            valid: continentValue ==='' ? false: true,\n            error: continentValue === ''? {message: 'field is required'} : null\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    const {resourceDescriptor, referenceTables} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.fields, (item) => item.value || '')]\n        },\n        newReference: {\n          resourceName: 'ricentities_groups',\n          data: this.state.multiParts.map((part) => {\n            return {\n              'RICname_group': this.state.fields['RICname'].value,\n              'RICname_part': part.value\n            }\n          })\n        }\n      }\n      this.props.onAddNew(payload)\n    }\n\n    const sortedFields = sortBy(schema.fields, (field) => {\n      return RANKED_FIELDS[field.name]\n    })\n\n    const options = getOptions({\n      tables: referenceTables,\n      resourceName: 'ricentities',\n      referenceField: 'RICname',\n      filter: {\n        field: 'type',\n        value: 'group'\n      }\n    });\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            sortedFields.map((field, index) => {\n              if (field.name === 'RICname') {\n                const {value, fieldValid} = this.state.fields[field.name];\n                return (\n                  <FieldContainer>\n                    <Label>\n                      {field.name}\n                      {\n                        field.constraints && field.constraints.required &&\n                        <span>*</span>\n                      }\n                    </Label>\n                    <Control>\n                      <Select isSearchable={true}\n                          isClearable={true}\n                          isMulti\n                          value={this.state.multiParts}\n                          options={options}\n                          onChange={this.handleChangeMulti} />\n                        <div>{value}</div> \n                    </Control>\n                    {\n                      fieldValid && fieldValid.error && <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n                    }\n                  </FieldContainer> \n                )\n              } \n              return (\n                <FieldInput \n                  key={index}\n                  isNonchangable={field.name !== 'RICname'}\n                  referenceTables={referenceTables}\n                  fieldDescriptor={field} \n                  fieldValue={this.state.fields[field.name].value}\n                  onChange={this.handleFieldChange} />\n              )\n            })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length > 0}  onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewRICentityForm;","import React from 'react';\nimport {Table} from 'tableschema';\n\nimport {keys, values, mapValues, sortBy, uniq} from 'lodash';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n  Help,\n  Columns,\n  Column\n} from 'design-workshop';\n\nimport FieldInput from './FieldInput';\nimport NewResourceRow from './NewResourceRow';\nimport NewRICentityForm from './NewRICentityForm';\nimport {NON_CHANGABLE_FIELDS, SOURCE_SLUGIFY, SOURCE_SUGGESTION_FIELDS} from '../constants';\n\nconst castFormObject = (formObject) =>  mapValues(formObject, (v => v.value));\n\n\nclass ReferenceResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues, prefixedValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const newResource = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n\n      if (field.constraints && field.constraints.required) {\n        valid = false\n      }\n      if(originalValues && originalValues.find((item) => item.referenceField=== field.name) && field.name !== 'slug') {\n        value = originalValues.find((item) => item.referenceField=== field.name).value;\n        valid = true;\n      }\n      if (prefixedValues && prefixedValues[field.name]) {\n        value = prefixedValues[field.name];\n        valid = true\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      newResource,\n      showNewReference:false\n    }\n  }\n\n  getSlug = (payload) => {\n    let preFields = {\n      ...this.state.newResource,\n      [payload.fieldName]: payload\n    };\n    // remove field data structure to mimic source object\n    const value = SOURCE_SLUGIFY(castFormObject(preFields)) ;\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {resourceDescriptor} = this.props;\n\n    if (this.state.newResource['slug']) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        newResource: {\n          ...this.state.newResource,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    \n    if (resourceDescriptor.name === 'ricentities' && payload.fieldName === 'type' && payload.value === 'group') {\n      this.props.onSelectGroup()\n    }\n\n    this.setState({\n      newResource: {\n        ...this.state.newResource,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleShowNew = (payload) => {\n    this.setState({\n      showNewReference: true\n    })\n  }\n\n  handleHideNew = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      showNewReference: false,\n      newReference: null,\n      referenceMap: null,\n      isRICentityGroup: false,\n      prefixedValues: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleCreateNewReference = (payload) => {\n    const {referenceMap} = payload\n    const {field} = referenceMap;\n    this.setState({\n      showNewReference: true,\n      resourceValid: {\n        valid: true\n      },\n      referenceMap,\n      newReference: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleAddNewReference = (payload) => {\n    const {newResource, newReference} = payload;\n    const {field, referenceField} = this.state.referenceMap;\n    this.setState({\n      newReference: newResource,\n      newRefReference: newReference,\n      showNewReference: false,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: true},\n          value: newResource.data[0][referenceField]\n        }\n      }\n    })\n  }\n\n  handleResetNewReference = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      newReference: null,\n      newRefReference: null,\n      showNewReference: true,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleSelectGroup = () => {\n    this.setState({\n      isRICentityGroup: true\n    })\n  }\n\n  render() {\n    const {descriptor, resourceDescriptor, referenceTables, originalValues, prefixedValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.newResource).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const getReferenceDescriptor = () => {\n      if (schema.foreignKeys) {\n        const {reference} = schema.foreignKeys[0];\n        return descriptor.resources.find((resource) => resource.name === reference.resource);\n      }\n      return;\n    }\n    \n    const handleAddNew = async () =>{\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.newResource, (item) => item.value || '')]\n        },\n        newReference: this.state.newReference,\n        newRefReference: this.state.newRefReference\n      }\n\n      // TODO: hardcoded\n      if (resourceDescriptor.name === 'currencies' && !this.state.newReference) {\n        const source = [keys(payload.newResource.data[0])].concat([values(payload.newResource.data[0])]);\n        const relations = {\n          exchange_rates: referenceTables['exchange_rates']\n        };\n        let table;\n        const prefixedValues = {\n          \"modified_currency\": this.state.newResource['modified_currency'].value\n        }\n        try {\n          table = await Table.load(source, {schema});\n          const rows = await table.read({forceCast: true, relations});\n          const errors = rows.filter((row) => row.errors);\n          if (errors.length) {\n            this.setState({\n              prefixedValues,\n              resourceValid: {\n                valid: false,\n                message: errors[0].errors[0].errors[0].message\n              }\n            });\n          } else {\n            this.setState({\n              resourceValid: {valid: true}\n            })\n            this.props.onAddNew(payload)\n          }\n        } catch (error) {\n          this.setState({\n            prefixedValues,\n            resourceValid: {\n              valid: false,\n              message: error.message || 'validation fail'\n            }\n          });\n          console.error(error)\n        }\n      }\n      else this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <Columns>\n          <Column style={{height: '50vh', overflow:'auto'}}>\n            <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n            {\n              sortBy(schema.fields, (field) => field.constraints && field.constraints.required)\n              .map((field, index) => {\n                let suggestedOptions;\n                if (resourceDescriptor.name === 'sources' && SOURCE_SUGGESTION_FIELDS.indexOf(field.name)!== -1) {\n                  suggestedOptions = uniq(referenceTables['sources'].map((d) => d[field.name]))\n                }\n                return (\n                  <FieldInput \n                    key={index}\n                    isNonchangable={NON_CHANGABLE_FIELDS.indexOf(field.name) !==-1 || (prefixedValues && prefixedValues[field.name])}\n                    isValidationField={this.state.prefixedValues && this.state.prefixedValues[field.name]}\n                    fieldDescriptor={field}\n                    foreignKeys={schema.foreignKeys}\n                    referenceTables={referenceTables}\n                    suggestedOptions={suggestedOptions}\n                    fieldValue={(this.state.newResource[field.name] && this.state.newResource[field.name].value) || (prefixedValues && prefixedValues[field.name])}\n                    showNewReference={this.state.showNewReference}\n                    newReference={this.state.newReference}\n                    onClickCreate={this.handleCreateNewReference}\n                    onChange={this.handleFieldChange} />\n                )\n              })\n            }\n            {\n              this.state.resourceValid && this.state.resourceValid.message &&\n              <FieldContainer>\n                <Help isColor=\"danger\">{this.state.resourceValid.message}</Help>\n              </FieldContainer>\n            }\n          </Column>\n          {schema.foreignKeys && \n          <Column>\n            {this.state.showNewReference && \n            (this.state.isRICentityGroup ?\n              <NewRICentityForm\n                descriptor={descriptor}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} /> :\n              <ReferenceResourceForm\n                descriptor={descriptor}\n                originalValues={originalValues.filter((item)=> item.field === 'year')}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                prefixedValues={this.state.prefixedValues}\n                onSelectGroup={this.handleSelectGroup}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} />\n            )\n            }\n            {this.state.newReference && \n              <div>\n                <NewResourceRow resource={this.state.newReference} />\n                <Button onClick={this.handleResetNewReference}>Reset</Button>\n              </div>\n            }\n          </Column>}\n          {schema.foreignKeys && this.state.newRefReference && \n            <Column>\n              <NewResourceRow resource={this.state.newRefReference} />\n            </Column>\n          }\n        </Columns>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default ReferenceResourceForm;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {values, difference} from 'lodash'\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop';\n\nimport {NON_CHANGABLE_FIELDS, LABEL_FIELDS_FK_SOLVED} from '../constants'\n\nimport {validateResource} from '../redux/modules/schemaValidation';\n\nimport NewResourceRow from './NewResourceRow';\nimport ReferenceResourceForm from './ReferenceResourceForm';\nimport FieldInput from './FieldInput';\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState();\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  initFixedValues = () => {\n    const {modificationItem} = this.props;\n    const fieldList = modificationItem.field.split('|');\n    return fieldList.reduce((res, field) => {\n      return {\n        ...res,\n        [field]: undefined\n      }\n    }, {});\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    let fixedValues = this.initFixedValues()\n    if (modificationItem.fixedValues) fixedValues = modificationItem.fixedValues\n\n    return {\n      fixedValues,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null,\n      showSolving: !modificationItem.fixed,\n    }\n  }\n\n  handleSubmitForm = () => {\n    const {fixedValues, newResource, newReference, newRefReference} = this.state;\n    // if(!fixedValue || fixedValue.length === 0) return;\n    let fixedReferenceTable = []\n    if (newResource) {\n      fixedReferenceTable.push(newResource);\n    }\n    if (newReference) {\n      fixedReferenceTable.push(newReference);\n    }\n    if (newRefReference) {\n      fixedReferenceTable.push(newRefReference);\n    }\n\n    this.props.onSubmitForm({\n      fixedValues,\n      fixedReferenceTable\n    });\n  }\n\n  handleClickCreate = () => {\n    this.props.onTouch(true);\n    const fixedValues = this.initFixedValues();\n    this.setState({\n      fixedValues,\n      showSolving: true,\n      showNewForm: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleResetCreate = () => {\n    this.setState({\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleAddNewResource = (payload) => {\n    const {newResource, newReference, newRefReference} = payload;\n    const {modificationItem, foreignKeyField} = this.props;\n\n    const fieldList = modificationItem.field.split('|');\n    const fixedValues = fieldList.reduce((res, field, index) => {\n      let fixedValue = fieldList.length > 1 ? newResource.data[0][foreignKeyField.reference.fields[index]]:\n                                              newResource.data[0][foreignKeyField.reference.fields]\n      const special_field_for_label = LABEL_FIELDS_FK_SOLVED[field];\n      if (special_field_for_label && special_field_for_label in newResource.data[0]) {\n        fixedValue = newResource.data[0][special_field_for_label]\n      }\n      return {\n        ...res,\n        [field]: fixedValue\n      }\n    }, {})\n    this.setState({\n      newResource,\n      newReference,\n      newRefReference,\n      fixedValues,\n      showNewForm: false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleSelectExist = (item) => {\n    const {modificationItem} = this.props;\n    this.props.onTouch(true)\n    if (!item) {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: ''\n        }\n      })\n    }\n    else {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: item.value\n        },\n        newResource: null\n      })\n    }\n  }\n\n  handleShowSolving = () => {\n    this.props.onTouch(true);\n    const fixedValues = this.initFixedValues();\n\n    this.setState({\n      fixedValues,\n      showSolving: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleHideSolving = () => {\n    this.props.onTouch(false)\n    this.setState({\n      showSolving: false,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleDiscard = () => {\n    const {modificationItem} = this.props;\n    this.props.onTouch(false);\n    const fixedValues = this.initFixedValues();\n    this.setState({\n      fixedValues,\n      showSolving: modificationItem.fixed ? false : true,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    });\n    this.props.onDiscard()\n  }\n  \n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {field, fixedValues, fixedReferenceTable, unchangable, fixedStatus}= modificationItem;\n    const fixedValue = values(fixedValues).join('|');\n    const printValue = fixedValue.length ? fixedValue: 'none';\n    const isNonchangableField = difference(NON_CHANGABLE_FIELDS, field.split('|')).length < NON_CHANGABLE_FIELDS.length\n\n    return (\n      <FieldContainer>\n        <Control>\n\n          <Label className=\"has-text-success\">Fixed with value</Label>\n          <p className=\"has-text-success\">{printValue}</p>\n          <Help isColor=\"success\">\n            {!isNonchangableField && <li>total {modificationItem.errors.length} rows updated</li>}\n            {\n              fixedReferenceTable && fixedReferenceTable.map((table, i)=> {\n                return (\n                  <li key={i}>{table.data.length} row(s) added to \"{table.resourceName}\" table</li>\n                )\n              })\n            }\n          </Help>\n          {!this.state.showSolving && <Button isColor=\"info\" isDisabled={unchangable} onClick={this.handleShowSolving}>Change this fix</Button>}\n          {unchangable && fixedStatus === 'fixInOther' &&<Help isColor=\"success\">found same value in other error, please fix it there</Help>}\n          {unchangable && fixedStatus === 'autoFixed' &&<Help isColor=\"success\">this foreign key error is auto fixed by previous format modification</Help>}\n        </Control>\n      </FieldContainer>\n    )\n  }\n\n  renderSolving() {\n    const {modificationItem, referenceTables, isCurrencyFixDisabled, schema} = this.props;\n\n    const fieldDescriptor = schema.fields.find((f) => f.name === modificationItem.field)\n    \n    return (\n      <div>\n        {modificationItem.field === 'source' && !this.state.showNewForm && !this.state.newResource &&\n          <FieldInput \n            isNonchangable={false}\n            foreignKeys={schema.foreignKeys}\n            fieldDescriptor={fieldDescriptor} \n            referenceTables={referenceTables}\n            fixedValue={this.state.fixedValues[modificationItem.field]}\n            fieldValue={this.state.fixedValues[modificationItem.field]}\n            onClickCreate={this.handleClickCreate}\n            onChange={this.handleSelectExist} />\n        }\n        {\n          modificationItem.field !== 'source' &&\n          <FieldContainer>\n            <Control>\n              {isCurrencyFixDisabled && <Help isColor=\"danger\">Please fix year format error first</Help>}\n              <Button isDisabled={isCurrencyFixDisabled} isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n            </Control>\n          </FieldContainer>  \n        }\n      </div>\n      )\n  }\n\n  render() {\n    const {modificationItem, foreignKeyField, descriptor, referenceTables, isModificationTouched} = this.props;\n    const {value, message, field}= modificationItem;\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceFieldResource = descriptor.resources.find((resource) => resource.name === resourceName);\n    \n    const getLayoutColumns = (field) => {\n      switch(field) {\n        case 'reporting':\n        case 'partner':\n        case 'currency|year|reporting':\n          return '1/4'\n        default:\n          return '1/2'\n      }\n    }\n    const validateFixedValues = () => {\n      if (field.split('|').length > 0) {\n        const invalidValue = values(this.state.fixedValues).filter((fixedValue) => fixedValue === undefined);\n        return invalidValue.length > 0;\n      } else return this.state.fixedValues[field] === undefined;\n    }\n    const mapFieldValue = (field, value) => {\n      return field.split('|').map((f, index) => {\n        return  {\n          value: value.split('|')[index],\n          field: f,\n          referenceField: typeof(foreignKeyField.reference.fields) === 'string' ?\n            foreignKeyField.reference.fields:foreignKeyField.reference.fields[index]\n        }\n      })\n    }\n    const originalValues = mapFieldValue(field, value);\n\n    const layoutColumn = getLayoutColumns(modificationItem.field);\n\n    const isSubmitDisabled = validateFixedValues();\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize={layoutColumn}>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {!this.state.showSolving && modificationItem.fixed && this.renderFixed()}\n              {this.state.showSolving && this.renderSolving()}\n            </Column>\n            { this.state.showNewForm && \n              <Column className='new-resource-form' style={{flex: 'auto'}}>\n                <ReferenceResourceForm \n                  originalValues={originalValues}\n                  descriptor={descriptor}\n                  resourceDescriptor={referenceFieldResource}\n                  referenceTables={referenceTables}\n                  onCancel={this.handleCancel}\n                  onAddNew={this.handleAddNewResource} />\n              </Column>\n            }\n            {\n              this.state.newResource && \n              <Column>\n                <NewResourceRow resource={this.state.newResource}/>\n                <Button onClick={this.handleClickCreate}>Reset</Button>\n              </Column>\n            }\n            {\n              this.state.newReference && \n              <Column>\n                <NewResourceRow resource={this.state.newReference}/>\n              </Column>\n            }\n            {\n              this.state.newRefReference && \n              <Column>\n                <NewResourceRow resource={this.state.newRefReference}/>\n              </Column>\n            }\n          </Columns>\n          {\n            this.state.showSolving &&\n            <FieldContainer isGrouped>\n              {/* {\n                modificationItem.fixed &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n                </Control>\n              } */}\n              {\n                isModificationTouched &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleDiscard}>Discard modification</Button>\n                </Control>\n              }\n              <Control>\n                <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n              </Control>\n            </FieldContainer>\n          }\n\n        </form>\n      </div>\n    )\n  }\n}\nexport default connect(null, {\n  validateResource\n})(ForeignKeyCorrection);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {isEqual} from 'lodash';\n\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  referenceTables,\n  descriptor,\n  schema,\n  isCurrencyFixDisabled,\n  isModificationTouched,\n  modificationItem,\n  modificationIndex,\n  onDiscard,\n  onTouch,\n  onSubmitModification,\n}) => {\n  const handleSubmitModification = (payload) => {\n    const {fixedValues, fixedReferenceTable} = payload;\n    return onSubmitModification({\n      ...modificationItem,\n      fixedValues,\n      fixedReferenceTable,\n      index: modificationIndex\n    })\n  }\n\n  const getFieldDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  const getForeignKeyField = () => {\n    let foreignKeyField;\n    if (modificationItem.field.indexOf('|') !== -1) {\n      const fieldList = modificationItem.field.split('|');\n      foreignKeyField = schema.foreignKeys.find((f) => isEqual(f.fields, fieldList));\n    }\n    else {\n      foreignKeyField = schema.foreignKeys.find((f) => f.fields === modificationItem.field);\n    }\n    return foreignKeyField;\n  }  \n  return (\n    <div>\n      {\n        modificationItem.errorType === 'ERROR_FORMAT' &&\n        <FormatCorrection \n          fieldDescriptor={getFieldDescriptor()} \n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          isModificationTouched={isModificationTouched}\n          onDiscard={onDiscard}\n          onTouch={onTouch}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      {\n        modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n        <ForeignkeyCorrection \n          schema={schema}\n          descriptor={descriptor}\n          foreignKeyField={getForeignKeyField()}\n          isCurrencyFixDisabled={isCurrencyFixDisabled}\n          isModificationTouched={isModificationTouched}\n          referenceTables={referenceTables}\n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onDiscard={onDiscard}\n          onTouch={onTouch}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      <ContextTable flows={flows} modificationItem={modificationItem} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  descriptor: state.schemaValidation.descriptor,\n  referenceTables: state.referenceTables.referenceTables\n});\n\nexport default connect(mapStateToProps)(ModificationComponent);","import React from 'react';\n\nimport {\n  Card,\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalClose\n} from 'design-workshop';\n\n\nconst AlertModal = ({\n  isActive,\n  closeModal\n}) => {\n  return (\n    <Modal isActive={isActive}>\n      <ModalBackground onClick={closeModal} />\n      <ModalContent>\n        <Card bodyContent=\"You have made a modification, please confirm your fix first?\" />\n      </ModalContent>\n      <ModalClose onClick={closeModal} />\n    </Modal>\n  )\n}\n\nexport default AlertModal","import React from 'react';\nimport {connect} from 'react-redux';\nimport {findIndex} from 'lodash';\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {updateFlows} from '../../redux/modules/flows';\nimport {revalidateRows} from '../../redux/modules/schemaValidation';\nimport {submitModification} from '../../redux/modules/modification';\nimport {getResourceSchema} from '../../redux/modules/schemaValidation';\nimport {addTableRow, deleteTableRow} from '../../redux/modules/referenceTables';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\nimport AlertModal from '../../components/AlertModal';\n\nclass DataModification extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false,\n      isModificationTouched: false\n    }\n  }\n\n  handleTouchModification = (touched) => {\n    this.setState({\n      isModificationTouched: touched\n    })\n  }\n\n  handleShowAlert = () => {\n    this.setState({\n      showAlert: true\n    })\n  }\n\n  handleHideAlert = () => {\n    this.setState({\n      showAlert: false\n    })\n  }\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList, referenceTables, steps, selectedStep} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false);\n    const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n    const modificationItem = modificationList[modificationIndex]\n    let isCurrencyFixDisabled = false;\n    if (modificationItem.field === 'currency|year|reporting' && yearFormatValues.indexOf(modificationItem.value.split('|')[1]) !== -1) {\n      isCurrencyFixDisabled = true\n    }\n    \n    const handlePrevStep = () => {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex-1])\n    }\n    const handleNextStep = () =>  {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex+1])\n    }\n\n    const handlePrevError = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleDiscard = () => {\n      if ( modificationIndex < modificationList.length - 1 && nonFixedList.length > 0) {\n        this.props.goNextError();\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    const handleHideModification = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      this.props.hideModification();\n    }\n    \n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = (payload) => {\n      const {errors, errorType, fixedReferenceTable} = payload;      \n    \n      if (errorType === 'ERROR_FORMAT' || payload.field === 'source') {\n        this.props.updateFlows(payload);\n      }\n      \n      if(payload.field === 'year') {\n        const rowNumbers = errors.map((e) => e.rowNumber);\n        const columnIndex = flows[0].indexOf('year');\n        const source = [flows[0]].concat(errors.map((e) => {\n          const row = [...flows[e.rowNumber -1]]\n          row[columnIndex] = payload.fixedValues['year'];\n          return row;\n        }));\n        const relations = {currencies: referenceTables['currencies']}\n        this.props.revalidateRows({\n          originalValue: payload.value,\n          fixedValues: payload.fixedValues,\n          rowNumbers,\n          source,\n          schema,\n          relations,\n        });\n      }\n\n      if (errorType === 'ERROR_FOREIGN_KEY') {\n        const prevFixedReferenceTable = modificationItem.fixedReferenceTable;\n        if (prevFixedReferenceTable && fixedReferenceTable) {\n          prevFixedReferenceTable.forEach((table) => {\n            this.props.deleteTableRow(table);\n          })\n        }\n        fixedReferenceTable.forEach((table) => {\n          this.props.addTableRow(table)\n        })\n      }\n\n      this.props.submitModification(payload);\n\n      this.setState({\n        isModificationTouched: false\n      });\n\n      if ( modificationIndex < modificationList.length - 1 && nonFixedList.length > 0) {\n        this.props.goNextError()\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              isCurrencyFixDisabled={isCurrencyFixDisabled}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationItem} \n              isModificationTouched={this.state.isModificationTouched}\n              onTouch={this.handleTouchModification}\n              onDiscard={handleDiscard}\n              onSubmitModification={handleSubmitModification} />\n            \n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={handleHideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <span>{(this.state.showAlert).toString()}</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n            <AlertModal isActive={this.state.showAlert} closeModal={this.handleHideAlert} />\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  referenceTables: state.referenceTables.referenceTables,\n  schema: getResourceSchema(state),\n  modificationList: state.modification.modificationList,\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  isModification: state.ui.isModification,\n  modificationIndex: state.modification.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  updateFlows,\n  addTableRow,\n  deleteTableRow,\n  revalidateRows,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import XLSX from \"xlsx\";\nimport { csvFormatRows, csvFormat } from \"d3-dsv\";\n\nimport FileSaver from \"file-saver\";\n\nexport function downloadFlow(array, fileName, ext) {\n  let file;\n  const header = array[0];\n  switch (ext) {\n    case \"csv\":\n    default: {\n      const csvString = csvFormatRows(array) + \"\\n\";\n      file = new File([csvString], `${fileName}.${ext}`, {\n        type: \"text/csv;charset=utf-8\",\n      });\n      FileSaver.saveAs(file);\n      break;\n    }\n    case \"xlsx\": {\n      const sheet = XLSX.utils.aoa_to_sheet(array, { header });\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, sheet, \"SheetJS\");\n      XLSX.writeFile(wb, `${fileName}.${ext}`);\n      break;\n    }\n  }\n}\n\nexport function downloadTable(array, fileName, ext) {\n  let file;\n  switch (ext) {\n    case \"csv\":\n    default: {\n      const csvString = csvFormat(array);\n      file = new File([csvString], `${fileName}.${ext}`, {\n        type: \"text/csv;charset=utf-8\",\n      });\n      FileSaver.saveAs(file);\n      break;\n    }\n  }\n}\n","import React from 'react';\nimport {\n  Button,\n  Field,\n  Label,\n  Input,\n  Control,\n  Help\n} from 'design-workshop';\n\nimport {\n  Modal,\n  ModalBackground,\n  ModalClose,\n  ModalCard,\n  ModalCardBody,\n} from 'bloomer';\n\n\nclass GithubAuthModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: '',\n      message: ''\n    };\n  }\n\n  handleChangeToken = (event) => {\n    this.setState({\n      token: event.target.value\n    });\n  }\n\n  handleChangeMessage = (event) => {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n\n  handleSubmit = () => {\n    this.props.onSubmitAuth(this.state)\n  }\n\n  render() {\n    const {isActive, isCommit, closeModal} = this.props;\n    let invalidInput = !this.state.token;\n    \n    if (isCommit) {\n      invalidInput = !this.state.token || !this.state.message;\n    }\n\n    return (\n      <Modal isActive={isActive}>\n        <ModalBackground onClick={closeModal} />\n        <ModalCard>\n          <ModalCardBody>\n            <Field>\n              <Label>personal access token*:</Label>\n              <Control>\n                <Input type=\"password\" value={this.state.token} onChange={this.handleChangeToken} />\n              </Control>\n            </Field>\n            {isCommit && \n              <Field>\n                <Label>commit message*:</Label>\n                <Control>\n                  <Input value={this.state.message} onChange={this.handleChangeMessage} />\n                </Control>\n              </Field>\n            }\n            <Field>\n              {invalidInput &&<Help isColor=\"danger\">requied field is missing</Help>}\n              <Button isDisabled={invalidInput} isColor=\"info\" onClick={this.handleSubmit}>{isCommit ? 'Commit': 'Login'}</Button>\n            </Field>\n          </ModalCardBody>\n        </ModalCard>\n        <ModalClose onClick={closeModal} />\n      </Modal>\n    )\n  }\n}\n\nexport default GithubAuthModal;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { groupBy, keyBy } from \"lodash\";\n\nimport { Button, Control, Field, Columns, Column, Help } from \"design-workshop\";\n\nimport { csvFormatRows, csvParse } from \"d3-dsv\";\n\nimport { exportFlows } from \"../../redux/modules/flows\";\nimport { setStep } from \"../../redux/modules/ui\";\n\nimport { updateRemoteFiles } from \"../../redux/modules/repoData\";\n\nimport { downloadFlow, downloadTable } from \"../../utils/fileExporter\";\nimport GithubAuthModal from \"../../components/GithubAuthModal\";\n\nimport { SOURCE_SLUG_FILENAME } from \"../../constants\";\nimport { owner, repoName } from \"../../config/default\";\n\nclass DataPublish extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false,\n    };\n  }\n\n  handleOpenModal = () => {\n    this.setState({ isModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ isModalShow: false });\n  };\n\n  render() {\n    const { flows, repoData, referenceTables, originalLength } = this.props;\n    const {\n      selectedBranch,\n      remoteUpdateStatus,\n      lastCommit,\n      remoteUpdateMessage,\n      tables,\n    } = repoData;\n\n    let updatedTables = [];\n\n    Object.keys(referenceTables).forEach((name) => {\n      if (referenceTables[name].length !== originalLength[name]) {\n        updatedTables.push({\n          name,\n          updatedRows: referenceTables[name].slice(originalLength[name]),\n        });\n      }\n    });\n\n    const handleExportFlow = () => {\n      const { file, data } = flows;\n      downloadFlow(data, `${file.name}_corrections`, \"csv\");\n    };\n\n    // group flows by source filename\n    // we need to source metadata to generate source filename\n    const sources = keyBy(referenceTables.sources, (s) => s.slug);\n    // format + parse to go from array representation to list of obejct\n    const parsedFlows = csvParse(csvFormatRows(flows.data));\n    const groupedFlows = groupBy(parsedFlows, (item) =>\n      SOURCE_SLUG_FILENAME(sources[item[\"source\"]])\n    );\n\n    const handleUpdateRemoteFiles = (auth) => {\n      this.handleCloseModal();\n\n      const flowFiles = Object.keys(groupedFlows).map((file) => {\n        return {\n          fileName: `flows/${file}.csv`,\n          data: groupedFlows[file],\n          source: file,\n        };\n      });\n      const tableFiles = updatedTables.map((table) => {\n        return {\n          fileName: `${table.name}.csv`,\n          data: referenceTables[table.name],\n          sha: tables[table.name].sha,\n        };\n      });\n      this.props.updateRemoteFiles({\n        auth,\n        files: flowFiles.concat(tableFiles),\n        branch: selectedBranch.name,\n        descriptor: this.props.repoData.descriptor,\n      });\n    };\n    const handleStartOver = () => {\n      this.props.setStep({ id: \"0\" });\n    };\n\n    return (\n      <div>\n        <Columns>\n          <Column>\n            <strong>fixed flows table by source</strong>\n            {Object.keys(groupedFlows).map((source) => {\n              return <p>{source}.csv</p>;\n            })}\n          </Column>\n          <Column>\n            <div>\n              <strong>updated reference tables</strong>\n              {updatedTables.map((table) => {\n                const handleExportTable = () => {\n                  downloadTable(referenceTables[table.name], table.name, \"csv\");\n                };\n                return (\n                  <Control>\n                    <a href=\"#\" onClick={handleExportTable}>\n                      {table.name} table: {table.updatedRows.length} rows added\n                    </a>\n                  </Control>\n                );\n              })}\n            </div>\n          </Column>\n        </Columns>\n        <Field isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={handleExportFlow}>\n              Download fixed flows\n            </Button>\n          </Control>\n          <Control>\n            {remoteUpdateStatus === \"updated\" ? (\n              <Button isColor=\"success\" onClick={handleStartOver}>\n                Start a new import\n              </Button>\n            ) : (\n              <Button\n                isDisabled={remoteUpdateStatus === \"loading\"}\n                isColor=\"info\"\n                onClick={this.handleOpenModal}\n              >\n                Publish tables to \"{selectedBranch.name}\" branch\n              </Button>\n            )}\n          </Control>\n        </Field>\n        <Field>\n          {remoteUpdateStatus === \"loading\" && (\n            <Help isColor=\"success\">\n              updating files on github: {remoteUpdateMessage}...\n            </Help>\n          )}\n          {remoteUpdateStatus === \"updated\" && (\n            <Help isColor=\"success\">\n              files have been commited on github see{\" \"}\n              <a\n                href={`https://github.com/${owner}/${repoName}/commit/${lastCommit}`}\n              >\n                commit details\n              </a>\n            </Help>\n          )}\n          {remoteUpdateStatus === \"fail\" && (\n            <Help isColor=\"danger\">fail to update files on github</Help>\n          )}\n        </Field>\n        <GithubAuthModal\n          isActive={this.state.isModalShow}\n          isCommit={true}\n          closeModal={this.handleCloseModal}\n          onSubmitAuth={handleUpdateRemoteFiles}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  flows: state.flows,\n  referenceTables: state.referenceTables.referenceTables,\n  originalLength: state.referenceTables.originalLength,\n  repoData: state.repoData,\n});\n\nexport default connect(mapStateToProps, {\n  setStep,\n  exportFlows,\n  updateRemoteFiles,\n})(DataPublish);\n","import DataPublish from './DataPublish'\n\nexport default DataPublish","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {\n  Button,\n  Help\n} from 'design-workshop';\n\nimport { \n  fetchAllTables,\n} from '../../redux/modules/repoData';\n\nimport {loginCreateBranch, logoutUser} from '../../redux/modules/repoData';\n\nimport GithubAuthModal from '../../components/GithubAuthModal';\n\n\nclass DataPrep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false \n    }\n  }\n   \n  handleShowLogin =()=> {\n    this.setState({\n      isModalShow: true\n    })\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      isModalShow: false\n    })\n  }\n   \n  handleLogin = (payload) => {\n    this.props.loginCreateBranch(payload);\n    this.handleCloseModal()\n  }\n\n  renderFetchTable() {\n    const {repoData} = this.props;\n    const {selectedBranch, tables, isBranchCreated} = repoData;\n\n    const handleGetTables = () => {\n      this.props.fetchAllTables({branch: selectedBranch.name});\n    }\n\n    return (\n      <div>\n        {isBranchCreated ? \n          <Help isColor=\"success\">branch \"{selectedBranch.name}\" is created</Help> : \n          <Help isColor=\"danger\">could not get branch from github, try login again</Help>\n        }\n        {\n          selectedBranch && !tables && \n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch table from branch {selectedBranch.name}</Button>\n        }\n        {selectedBranch && (tables ?\n          <Help isColor=\"success\">tables from {selectedBranch.name} branch are loaded</Help>:\n          <Help isColor=\"danger\">tables are not loaded, please reload from {selectedBranch.name} branch</Help>)\n        }\n      </div>\n    )\n  }\n\n  render () {\n    const {repoData} = this.props;\n    const {selectedBranch, isLogined} = repoData;\n  \n    return (\n      <div>\n        {/* <Label>Get tables from {selectedBranch.name} branch</Label>\n          <Select value={selectedBranch} onChange={handleSelectBranch}>\n            {\n              branches.map((item, index) => {\n                return (\n                  <option key={index}>{item.name}</option>\n                )\n              })\n            }\n          </Select>\n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch</Button> */}\n          { !isLogined &&\n            <Button isColor=\"info\" onClick={this.handleShowLogin}>\n            <span>Login to get branch</span>\n            </Button>\n          }\n          {\n            isLogined &&\n            <Button isColor=\"info\" onClick={this.props.logoutUser}>\n              <span>Logout</span>\n            </Button>\n          }\n          {selectedBranch && this.renderFetchTable()}\n          <GithubAuthModal \n            isActive={this.state.isModalShow}\n            isCommit={false}\n            closeModal={this.handleCloseModal} \n            onSubmitAuth={this.handleLogin} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  loginCreateBranch,\n  fetchAllTables\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import React from 'react';\nimport {difference} from 'lodash';\n\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\nimport {findIndex} from 'lodash';\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getResourceSchema\n} from '../../redux/modules/schemaValidation';\n\nimport DataPrep from '../DataPrep';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst prepareFlowData = (data, schema) => {\n  // lower foreignKeys\n  const FKFieldsIndices = schema.foreignKeys.map(fk => Array.isArray(fk.fields) ? fk.fields : [fk.fields]).reduce((set, fields) => {\n    //unique map results\n    fields.forEach(f => {\n      // hardcoded exception...\n      if (f !== 'source') {\n        const i = data[0].indexOf(f)\n        if (!set.includes(i))\n          set.push(i);\n        };\n      }\n    );\n    return set;\n  }, []);\n\n  // lowercase Reporting and partner + strip\n return data.map( (d,i) => {\n    if (i !== 0) {\n      return d.map( (v,i) => {\n        // Foreign Key fields are forced lowercase and trimed to limit glue work\n        if (FKFieldsIndices.includes(i) && v.toLowerCase)\n          return v.toLowerCase().trim();\n        else\n          return v;\n      })\n    }\n    else // don't touch headers..\n      return d\n  })\n}\n\nconst FileUpload = ({\n  steps,\n  selectedStep,\n  schema,\n  tables,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        data = prepareFlowData(data, schema);\n        importFlows({\n          file: {\n            name: file.name.split('.')[0]\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => {\n        console.error(error)\n        console.error('fail to parse file')\n      })\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        data = prepareFlowData(data, schema);\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => {\n        console.error(error)\n        console.error('fail to parse file')\n      })\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => {\n    const currentIndex = findIndex(steps, selectedStep);\n    setStep(steps[currentIndex+1])\n  }\n  return (\n    <div>\n      <DataPrep />\n      {\n        tables &&\n        <DropZone\n          maxSize={MAXIMUM_FILE_SIZE}\n          onDrop={handleDrop}\n          onDropRejected={handleDropRejected}\n          isSize=\"small\">\n          <span className=\"tech-info\">Cick here to upload or drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n        </DropZone>\n      }\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  schema: state.repoData.descriptor && getResourceSchema(state),\n  flows: state.flows,\n  tables: state.repoData.tables,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants';\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let missingRows = [];\n                      if (field.errorType === 'ERROR_FORMAT' && (field.name==='reporting' || field.name === 'partner')) {\n                        missingRows = field.errors.map((error) => error.rowNumber);\n                      }\n                      if(columnIndex === 0) return (<div key={columnIndex} className=\"table-cell\">{field.name}</div>)\n                      else if(columnIndex === 1) return (<div key={columnIndex} className=\"table-cell\">{field.errorType}</div>)\n                      else return (\n                        <div key={columnIndex} className=\"table-cell\">\n                          <span>{distinctErrors} different invalid values, {totalErrors} rows affected in total</span>\n                          {missingRows.map((rowNumber)=> {\n                            return (<li className=\"has-text-danger\">missing value in row {rowNumber}</li>)\n                          })}\n                        </div>\n                      )\n                      \n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\nimport {findIndex} from 'lodash';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\nimport {startModification} from '../../redux/modules/modification';\n\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getResourceSchema, getGroupedErrors} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations, schemaFeedback} = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({source:flows, schema, relations});\n    }\n  }\n  render() {\n    const {schemaFeedback, modificationList, steps, selectedStep} = this.props;\n    let isRequiredFieldMissing = false;\n    if (schemaFeedback && schemaFeedback.collectedErrors) {\n      isRequiredFieldMissing = (schemaFeedback.collectedErrors['reporting'] && schemaFeedback.collectedErrors['reporting'].errorType === 'ERROR_FORMAT') || \n                            (schemaFeedback.collectedErrors['partner'] && schemaFeedback.collectedErrors['partner'].errorType === 'ERROR_FORMAT')\n    }\n    const handlePrevStep = () => {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex-1])\n    }\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const groupedErrors = getGroupedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(groupedErrors)\n      }\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex+1])\n    }\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n              {isRequiredFieldMissing && <span>, value of required field is missing, please fix it locally first</span>}\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <Button \n                isColor=\"info\" \n                onClick={handlePrevStep}>\n                  Previous Step\n              </Button>\n              <Button \n                isColor=\"info\"\n                isDisabled= {isRequiredFieldMissing}\n                onClick={handleNextStep}>\n                  Review Errors\n              </Button>\n            </div>\n           \n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  relations: getRelations(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport {\n  Button,\n  Field,\n  Control\n} from 'design-workshop';\n\nimport {\n  Modal,\n  ModalBackground,\n  ModalClose,\n  ModalCard,\n  ModalCardBody,\n} from 'bloomer';\n\nimport {downloadTable} from '../utils/fileExporter';\nconst LeaveModificationModal = ({\n  originalLength,\n  referenceTables,\n  onSelectDiscard, \n  onSelectDownload,\n  isActive,\n  closeModal\n}) => {\n  let updatedTables = [];\n  if (referenceTables) {\n    Object.keys(referenceTables).forEach((name) => {\n      if (referenceTables[name].length !== originalLength[name]) {\n        updatedTables.push({\n          name,\n          updatedRows: referenceTables[name].slice(originalLength[name])\n        })\n      }\n    });\n  }\n\n  return (\n    <Modal isActive={isActive}>\n      <ModalBackground onClick={closeModal} />\n      <ModalCard>\n        <ModalCardBody>\n          <div style={{\n          textAlign:'center'\n          }}>\n              <h5 className=\"title is-5\">Leave this step, you might lost your modification?</h5>\n              {updatedTables.length>0 && <p>updated reference tables</p>}\n              {\n                updatedTables.map((table, i)=>{\n                  const handleExportTable = () => {\n                    downloadTable(referenceTables[table.name], table.name, 'csv')\n                  }\n                  return (\n                    <div key={i}>\n                      <a href=\"#\" onClick={handleExportTable}>{table.name} table: {table.updatedRows.length} rows added</a>\n                    </div>\n                  )\n                })\n              }\n              <Field isGrouped>\n                <Control>\n                  <Button onClick={onSelectDownload} isColor=\"success\">Download fixed flows</Button>\n                </Control>\n                <Control>\n                  <Button onClick={onSelectDiscard} isColor=\"danger\">Discard</Button>\n                </Control>\n                <Control>\n                  <Button onClick={closeModal} isColor=\"info\">Cancel</Button>\n                </Control>\n            </Field>\n            </div>\n        </ModalCardBody>\n      </ModalCard>\n      <ModalClose onClick={closeModal} />\n    </Modal>\n  )\n}\n\nexport default LeaveModificationModal","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\nimport FileUpload from './containers/FileUpload';\n\n\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport {downloadFlow} from './utils/fileExporter';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep,\n  showModal,\n  hideModal\n} from './redux/modules/ui';\n\nimport LeaveModificationModal from './components/LeaveModificationModal';\n\nconst App = ({\n  steps,\n  isModalDisplay,\n  selectedStep,\n  repoData,\n  flows,\n  referenceTables,\n  originalLength,\n  modificationList,\n  //actions\n  setStep,\n  showModal,\n  hideModal\n}) => {\n\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  const handleExport = () => {\n    const {file, data} = flows;\n    downloadFlow(data, `${file.name}_ongoing_corrections`, 'csv')\n  }\n\n  const handleSetStep = (step) => {\n    const {remoteUpdateStatus} = repoData;\n    let fixed\n    if (modificationList) {\n      fixed = modificationList.filter((item) => item.fixed)\n    }\n    if(fixed && step.id === '0' && remoteUpdateStatus !== 'updated') showModal();\n    else setStep(step)\n  }\n\n  const handleDiscard = () => {\n    setStep(steps[0]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Layout \n        steps={steps}\n        selectedStep={selectedStep}\n        onSetStep={handleSetStep}>\n        {renderChildren()}\n      </Layout>\n      <LeaveModificationModal\n        referenceTables={referenceTables}\n        originalLength={originalLength}\n        isActive={isModalDisplay}\n        onSelectDiscard={handleDiscard}\n        onSelectDownload={handleExport}\n        closeModal={hideModal} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  isModalDisplay: state.ui.isModalDisplay,\n  flows: state.flows,\n  referenceTables: state.referenceTables.referenceTables,\n  originalLength: state.referenceTables.originalLength,\n  selectedStep: state.ui.selectedStep,\n  modificationList: state.modification.modificationList,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  showModal,\n  hideModal,\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport referenceTables from './modules/referenceTables';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  flows,\n  referenceTables,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./geojson.json\": 398,\n\t\"./table-schema.json\": 962,\n\t\"./topojson.json\": 399\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 961;"],"sourceRoot":""}