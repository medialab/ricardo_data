{"version":3,"sources":["../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","redux/modules/modification.js","redux/modules/referenceTables.js","redux/modules/ui.js","redux/modules/flows.js","constants.js","redux/modules/repoData.js","redux/modules/schemaValidation.js","components/SummaryTable.js","components/ContextTable.js","utils/formUtils.js","components/FieldInput.js","components/FormatCorrection.js","components/NewResourceRow.js","components/NewRICentityForm.js","components/ReferenceResourceForm.js","components/ForeignkeyCorrection.js","containers/DataModification/ModificationComponent.js","components/AlertModal.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","utils/fileExporter.js","components/GithubAuthModal.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/Layout.js","containers/Layout/index.js","components/LeaveModificationModal.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","initialState","foreignKeyField","modificationIndex","modificationList","createReducer","SET_STEP","state","action","payload","START_MODIFICATION","REVALIDATE_ROWS_SUCCESS","originalValue","fixedValues","forEach","item","index","field","value","split","fixed","fixedStatus","unchangable","REVALIDATE_ROWS_FAILURE","rowNumbers","errorRowNumbers","errors","err","rowNumber","isEqual","fixedValue","existItem","find","HIDE_MODIFICATION","SELECT_ERROR","GO_NEXT_ERROR","GO_PREV_ERROR","SUBMIT_MODIFICATION","INIT_TABLES","FETCH_TABLES_SUCCESS","_ref","referenceTables","originalLength","csvParse","d","mapValues","v","k","length","DELETE_TABLE_ROW","_ref2","data","resourceName","newTable","slice","filter","row","some","r","ADD_TABLE_ROW","_ref3","splice","setStep","dispatch","type","steps","name","title","isModalDisplay","selectedStep","isModification","fixedIndex","IMPORT_FLOWS","UPDATE_FLOWS","fieldList","error","columnNumber","indexOf","RANKED_FIELDS","LABEL_FIELDS_FK_SOLVED","NON_CHANGABLE_FIELDS","re","source_generic_slugify","source","fields","f","trim","w","capitalize","replace","join","SOURCE_SUGGESTION_FIELDS","fetchAllTables","branch","get","repoRawContent","responseType","responseEncoding","then","res","descriptor","tablesList","resources","group","Promise","all","table","path","Date","now","tables","t","catch","console","log","joinForeignKeyFields","getCollectedErrors","flows","schema","foreignKeys","allFields","foreignKeysList","formatFields","foreignKeysFields","foreignKey","errorTypes","formatErrors","reduce","errorType","foreignKeyErrors","joinedFields","originalRowNumber","selectedErrors","columnIndex","message","push","joinedColumn","columnName","values","schemaFeedback","headerFeedback","getResourceName","schemaValidation","getResources","getResourceSchema","createSelector","resource","getRelations","selectedResource","relations","key","tableName","reference","SummaryTable","className","onSelectError","columnNames","yearFormatValues","React","createElement","style","position","width","height","errorIndex","isNonchangableField","difference","handleSelectError","isCurrencyFixDisabled","isNull","HelpPin","fixedReferenceTable","Button","isDisabled","isOutlined","isColor","onClick","ContextTable","modificationItem","errorColumn","rowIndex","errorColumnIndex","wordBreak","getOptions","referenceField","valuesCounted","countBy","sortBy","toPairs","label","FieldInput","Component","constructor","props","super","getStateFromProps","fieldDescriptor","fieldValue","this","fieldSchema","Field","options","constraints","enum","fieldValid","valid","suggestions","validateField","castValue","setState","onChange","fieldName","handleChange","event","target","handleClickCreate","onClickCreate","referenceMap","onSuggestionsFetchRequested","suggestedOptions","getSuggestions","inputValue","toLowerCase","inputLength","option","onSuggestionsClearRequested","handleSuggestionChange","newValue","renderSuggestion","suggestion","componentDidUpdate","prevProps","renderField","showNewReference","newReference","isNonchangable","isValidationField","inputProps","placeholder","isReferenceField","handleSuggestionsFetchRequested","generateValue","findIndex","Select","isSearchable","isClearable","onInputChange","matchSorter","Autosuggest","getSuggestionValue","Input","render","FieldContainer","Label","required","Control","Help","FormatCorrection","hydrateState","showSolving","handleFieldChange","onTouch","handleSubmitForm","onSubmitForm","handleShowSolving","handleHideSolving","handleDiscard","onDiscard","renderOriginal","renderFixed","printValue","renderInput","isModificationTouched","isSubmitDisabled","isGrouped","Columns","Column","isSize","NewResourceRow","overflow","NewRICentityForm","resourceDescriptor","handleChangeMulti","list","orderBy","multiParts","continentValue","getContinent","continents","continent","RICname","fieldsInvalid","sortedFields","isMulti","onCancel","handleAddNew","newResource","part","onAddNew","ReferenceResourceForm","originalValues","prefixedValues","getSlug","preFields","formObject","source_category","SOURCE_SLUG_FIELDS","slug","onSelectGroup","handleShowNew","handleHideNew","isRICentityGroup","handleCreateNewReference","resourceValid","handleAddNewReference","newRefReference","handleResetNewReference","handleSelectGroup","getReferenceDescriptor","uniq","async","concat","exchange_rates","Table","load","read","forceCast","ForeignKeyCorrection","initFixedValues","undefined","showNewForm","handleResetCreate","handleAddNewResource","special_field_for_label","handleCancel","handleSelectExist","i","renderSolving","referenceFieldResource","mapFieldValue","layoutColumn","getLayoutColumns","validateFixedValues","flex","connect","validateResource","Resource","multiple","messages","onSubmitModification","handleSubmitModification","getFieldDescriptor","ForeignkeyCorrection","getForeignKeyField","AlertModal","isActive","closeModal","Modal","ModalBackground","ModalContent","Card","bodyContent","ModalClose","DataModification","handleTouchModification","touched","handleShowAlert","showAlert","handleHideAlert","nonFixedList","selectError","display","justifyContent","handlePrevStep","currentIndex","handleNextStep","handleSelectFirstError","ModificationComponent","goNextError","hideModification","updateFlows","currencies","revalidateRows","prevFixedReferenceTable","deleteTableRow","addTableRow","submitModification","handleHideModification","toString","marginLeft","handlePrevError","goPrevError","handleNextError","modification","ui","status","rows","downloadFlow","array","fileName","ext","file","header","csvString","unparse","File","FileSaver","saveAs","sheet","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","downloadTable","GithubAuthModal","handleChangeToken","token","handleChangeMessage","handleSubmit","onSubmitAuth","isCommit","invalidInput","ModalCard","ModalCardBody","DataPublish","handleOpenModal","isModalShow","handleCloseModal","repoData","selectedBranch","remoteUpdateStatus","lastCommit","remoteUpdateMessage","updatedTables","updatedRows","groupedFlows","sources","keyBy","s","parsedFlows","csvFormatRows","groupBy","SOURCE_SLUG_FILENAME","deburr","href","handleExportTable","handleExportFlow","handleStartOver","owner","repoName","auth","flowFiles","filePath","tableFiles","sha","updateRemoteFiles","files","exportFlows","github","Octokat","repo","repos","fetch","baseReference","git","refs","flowRessourceMultipart","flowRessourceGroup","treeItems","includes","exists","response","newRessource","fileGit","blobs","create","content","Base64","encode","encoding","mode","JSON","stringify","tree","trees","base_tree","object","commit","commits","parents","update","DataPrep","handleShowLogin","handleLogin","loginCreateBranch","renderFetchTable","isBranchCreated","handleGetTables","isLogined","logoutUser","username","user","login","branches","items","refBranch","ref","HeaderValidation","headerNames","fieldNames","diffLength","diff","validationMap","Math","abs","prepareFlowData","FKFieldsIndices","fk","Array","isArray","set","FileUpload","importFlows","validateHeader","limit","headers","DropZone","maxSize","onDrop","reject","reader","FileReader","onload","bstr","result","wsname","SheetNames","ws","Sheets","sheet_to_json","defval","blankrows","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","handleDropRejected","textAlign","OverviewTable","collectedErrors","orderedErrors","totalErrors","groupedErrors","distinctErrors","missingRows","SchemaValidation","componentDidMount","validateTable","isRequiredFieldMissing","loader","Fragment","errorsList","groupedErrorsList","getGroupedErrors","startModification","tableLength","chunkSize","chunks","chunk","chunkIndex","chunkedTable","chunkErrors","Layout","onSetStep","children","LayoutWrapper","hasConfig","LayoutHeader","AppTitle","RunningTitle","LayoutContainer","LayoutContent","LayoutContentColumn","isConfig","step","isSelectedStep","isStepDisabled","ButtonContainer","handleClickStep","isWorkspace","LayoutFooter","LayoutFooterColumn","isSecondary","isPrimary","LeaveModificationModal","onSelectDiscard","onSelectDownload","showModal","hideModal","renderChildren","handleExport","Boolean","window","location","hostname","match","combineReducers","arguments","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","enhancers","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","Provider","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26bc9757.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 293,\n\t\"./table-schema.json\": 667,\n\t\"./topojson.json\": 294\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 666;","var map = {\n\t\"./data-package.json\": 733,\n\t\"./data-resource.json\": 734,\n\t\"./fiscal-data-package.json\": 735,\n\t\"./registry.json\": 736,\n\t\"./tabular-data-package.json\": 737,\n\t\"./tabular-data-resource.json\": 738\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 732;","var map = {\n\t\"./geojson.json\": 328,\n\t\"./table-schema.json\": 830,\n\t\"./topojson.json\": 329\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 829;","import { createReducer } from 'redux-starter-kit';\nimport { isEqual} from 'lodash'\n\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n\nconst initialState = {\n  foreignKeyField: null,\n  modificationIndex: 0,\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n    state.modificationIndex = 0\n  },\n  REVALIDATE_ROWS_SUCCESS: (state, action) => {\n    // case 1: only year format error, no foreignkey error\n    const {payload} = action;\n    const {originalValue, fixedValues} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      if (item.field === 'currency|year|reporting' && item.value.split(\"|\")[1] === ''+originalValue) {\n        state.modificationList[index] = {\n          ...state.modificationList[index],\n          fixed: true,\n          fixedStatus: 'autoFixed',\n          unchangable: true,\n          fixedValues: {\n            'currency': item.value.split('|')[0],\n            'year': fixedValues['year'],\n            'reporting': item.value.split('|')[2]\n          }\n        }\n      }\n    })\n  },\n  REVALIDATE_ROWS_FAILURE: (state, action) => {\n    // case 2,3: voilation relations\n    const {payload} = action;\n    const {fixedValues, rowNumbers} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      const errorRowNumbers = item.errors.map((err) => err.rowNumber);\n      if (item.field === 'currency|year|reporting' && isEqual(errorRowNumbers, rowNumbers)) {\n        const fixedValue = item.value.split(\"|\")[0] + '|' + fixedValues['year'] + '|' + item.value.split(\"|\")[2];\n        const existItem = state.modificationList.find((item) => item.value === fixedValue)\n        if ( existItem && existItem.index !== index) {\n          // case 2: fixed formatted year rows values of (currency|year|reporting) are same with other rows\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: true,\n            fixedStatus: 'fixInOther',\n            unchangable: true,\n            fixedValues: {\n              'currency': item.value.split('|')[0],\n              'year': fixedValues['year'],\n              'reporting': item.value.split('|')[2]\n            }\n          }\n        } else {\n          // case 3: fixed formatted year rows are new combo of (currency|year|reporting)\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: false,\n            fixedStatus: 'notFixed',\n            unchangable: false,\n            value: fixedValue,\n            fixedValues: null\n          }\n        } \n      }\n    })\n  },\n  HIDE_MODIFICATION: (state, action) => {\n    state.modificationIndex = 0\n  },\n  SELECT_ERROR: (state, action) => {\n    const {payload} = action;\n    state.modificationIndex = payload.index;\n  },\n  GO_NEXT_ERROR: (state, action) => {\n    state.modificationIndex = state.modificationIndex + 1\n  },\n  GO_PREV_ERROR: (state, action) => {\n    if (state.modificationIndex > 0) {\n      state.modificationIndex = state.modificationIndex - 1\n    }\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      ...payload,\n      fixed: true\n    }\n  }\n})\n\n","import { createReducer } from 'redux-starter-kit';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {isEqual, mapValues} from 'lodash';\n\n\nexport const ADD_TABLE_ROW = 'ADD_TABLE_ROW';\nexport const INIT_TABLES = 'INIT_TABLES';\nexport const DELETE_TABLE_ROW = 'DELETE_TABLE_ROW';\n\nexport const initTables = () => ({\n  type: INIT_TABLES,\n})\n\nexport const addTableRow = (payload) => ({\n  type: ADD_TABLE_ROW,\n  payload\n})\n\nexport const deleteTableRow = (payload) => ({\n  type: DELETE_TABLE_ROW,\n  payload\n})\n\nconst initialState = {};\n\n\nexport default createReducer(initialState, {\n  INIT_TABLES: (state) => {\n    return initialState;\n  },\n  FETCH_TABLES_SUCCESS: (state, {payload}) => {\n    const referenceTables = {}\n    const originalLength = {}\n    Object.keys(payload).forEach((id) => {\n      // TODO : use datapackage to load those data\n      referenceTables[id] = csvParse(payload[id], (d) => {\n        const newD = mapValues(d, (v,k) => {\n          //cast year to integer\n          if (k === 'year')\n            return +v\n          // cast empty string to null (in datapackage '' default to missing value)\n          if (v === '')\n            return null\n          return v\n        });\n        return newD;\n      })\n      originalLength[id] = referenceTables[id].length\n    })\n    state.referenceTables = referenceTables;\n    state.originalLength = originalLength\n  },\n  DELETE_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    let newTable = state.referenceTables[resourceName].slice();\n    newTable = newTable.filter((row) =>{\n      return !data.some((r) => { return isEqual(row, r) })\n    });\n    state.referenceTables[resourceName] = newTable\n  },\n  ADD_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    const newTable = state.referenceTables[resourceName].slice();\n    newTable.splice(newTable.length, 0, ...data);\n    state.referenceTables[resourceName] = newTable;\n  },\n})","import {\n  START_MODIFICATION,\n} from './modification';\n\nimport {INIT_TABLES} from './referenceTables';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const SHOW_CONFIRMATION_MODAL = 'SHOW_CONFIRMATION_MODAL';\nexport const HIDE_CONFIRMATION_MODAL = 'HIDE_CONFIRMATION_MODAL';\n\nexport const setStep = (payload) => (dispatch) => {\n  if (payload.id === '0') {\n    dispatch({\n      type: INIT_TABLES\n    })\n  }\n  dispatch({\n    type: SET_STEP,\n    payload\n  });\n}\n\nexport const showModal = () => ({\n  type: SHOW_CONFIRMATION_MODAL\n})\n\nexport const hideModal = () => ({\n  type: HIDE_CONFIRMATION_MODAL\n})\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  isModalDisplay: false,\n  selectedStep: steps[0],\n  isModification: false,\n  // modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case SHOW_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: true\n      }\n    case HIDE_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: false\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        // modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: payload.index\n      }\n    // case GO_NEXT_ERROR:\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex + 1\n    //   }\n    // case GO_PREV_ERROR:\n    //   if (state.modificationIndex === 0) return;\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex - 1\n    //   }\n    default:\n     return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nexport const UPDATE_FLOWS = 'UPDATE_FLOWS';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\nexport const EXPORT_FLOWS = 'EXPORT_FLOWS';\n\nexport const updateFlows = (payload) => ({\n  type: UPDATE_FLOWS,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\nexport const exportFlows = (payload) => ({\n  type: EXPORT_FLOWS\n});\n\n\nconst initialState = {}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  IMPORT_FLOWS: (state, action) => {\n    const {payload} = action;\n    return payload\n  },\n  UPDATE_FLOWS: (state, action) => {\n    const {payload} = action;\n    const {errors, fixedValues} = payload;\n    const fieldList = Object.keys(fixedValues)\n    errors.forEach((error) => {\n      fieldList.forEach((field) => {\n        const columnNumber = state.data[0].indexOf(field);\n        state.data[error.rowNumber -1][columnNumber] = fixedValues[field];\n      })\n    })\n  }\n})\n","import {capitalize, deburr} from 'lodash';\n\nexport const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\nexport const DEFAULT_REF_BRANCH = 'master';\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"year\": 3,\n  \"species_bullions\": 4,\n  \"transport_type\": 5,\n  \"statistical_period\": 6,\n  \"partner_sum\": 7,\n  \"world_trade_type\": 8,\n  \"notes\": 9,\n  \"source\": 10,\n  \"reporting\": 11,\n  \"partner\": 12,\n  \"export_import|special_general\": 13,\n  \"currency|year|reporting\": 14\n}\n\nexport const LABEL_FIELDS_FK_SOLVED = {\n  'partner': 'RICname',\n  'reporting': 'RICname',\n  'currency': 'modified_currency',\n  'export_import': 'modified_export_import',\n  'special_general': 'modified_special_general'\n}\nexport const NON_CHANGABLE_FIELDS = ['slug', 'export_import', 'special_general', 'reporting', 'partner', 'original_name', 'currency', 'year']\n\nexport const SOURCE_SLUG_FIELDS = source => [ source.source_category === 'website' ? 'editor' : 'author','name', 'country', 'volume_date', 'volume_number', 'pages'];\n\nconst re = /[^a-zA-Z0-9]+/g;\nconst  source_generic_slugify = (source, fields) => fields.map(f => {\n  if (source[f]){\n    return source[f].trim().split(' ').map(w => capitalize(w.replace(re, ''))).join('')\n  }\n  else\n    return null;\n  \n}, '').filter(e => e).join('_');\n\nexport const SOURCE_SLUGIFY = source => source_generic_slugify(source, SOURCE_SLUG_FIELDS(source))\n\nexport const SOURCE_SLUG_FILENAME = source => deburr(source_generic_slugify(source,\n  [ source.source_category === 'website' ? 'editor' : 'author','name', 'country', 'volume_date', 'volume_number']));\n\nexport const SOURCE_SUGGESTION_FIELDS = ['name', 'editor', 'country', 'volumn_number', 'shelf_number']","import { get, post } from \"axios\";\nimport {\n  apiUri,\n  branchUri,\n  owner,\n  referenceUri,\n  repoName,\n  repoRawContent,\n} from \"../../config/default\";\nimport { DEFAULT_REF_BRANCH } from \"../../constants\";\n\nimport Octokat from \"octokat\";\n\nimport { Base64 } from \"js-base64\";\nimport { unparse } from \"papaparse\";\n\nimport { csvParse } from \"d3-dsv\";\nimport { INIT_TABLES } from \"./referenceTables\";\n\nexport const FETCH_TABLE_REQUEST = \"FETCH_TABLE_REQUEST\";\nexport const FETCH_TABLE_SUCCESS = \"FETCH_TABLE_SUCCESS\";\nexport const FETCH_TABLE_FAILURE = \"FETCH_TABLE_FAILURE\";\n\nexport const FETCH_DATAPACKAGE_REQUEST = \"FETCH_DATAPACKAGE_REQUEST\";\nexport const FETCH_DATAPACKAGE_SUCCESS = \"FETCH_DATAPACKAGE_SUCCESS\";\nexport const FETCH_DATAPACKAGE_FAILURE = \"FETCH_DATAPACKAGE_FAILURE\";\n\nexport const FETCH_TABLES_REQUEST = \"FETCH_TABLES_REQUEST\";\nexport const FETCH_TABLES_SUCCESS = \"FETCH_TABLES_SUCCESS\";\nexport const FETCH_TABLES_FAILURE = \"FETCH_TABLES_FAILURE\";\n\nexport const FETCH_BRANCHES_REQUEST = \"FETCH_BRANCHES_REQUEST\";\nexport const FETCH_BRANCHES_SUCCESS = \"FETCH_BRANCHES_SUCCESS\";\nexport const FETCH_BRANCHES_FAILURE = \"FETCH_BRANCHES_FAILURE\";\n\nexport const CREATE_BRANCH_REQUEST = \"CREATE_BRANCH_REQUEST\";\nexport const CREATE_BRANCH_SUCCESS = \"CREATE_BRANCH_SUCCESS\";\nexport const CREATE_BRANCH_FAILURE = \"CREATE_BRANCH_FAILURE\";\n\nexport const LOGOUT_USER = \"LOGOUT_USER\";\n\nexport const LOGIN_CREATE_BRANCH_REQUEST = \"LOGIN_CREATE_BRANCH_REQUEST\";\nexport const LOGIN_CREATE_BRANCH_SUCCESS = \"LOGIN_CREATE_BRANCH_SUCCESS\";\nexport const LOGIN_CREATE_BRANCH_FAILURE = \"LOGIN_CREATE_BRANCH_FAILURE\";\n\nexport const UPDATE_REMOTE_FILES_REQUEST = \"UPDATE_REMOTE_FILES_REQUEST\";\nexport const UPDATE_REMOTE_FILES_LOG = \"UPDATE_REMOTE_FILES_LOG\";\nexport const UPDATE_REMOTE_FILES_SUCCESS = \"UPDATE_REMOTE_FILES_SUCCESS\";\nexport const UPDATE_REMOTE_FILES_FAILURE = \"UPDATE_REMOTE_FILES_FAILURE\";\n\nconst DEFAULT_MESSAGE = \"update data\";\n/**\n * ACTIONS\n */\n\nexport const fetchBranches = (payload) => (dispatch) => {\n  dispatch({\n    type: FETCH_BRANCHES_REQUEST,\n    payload,\n  });\n  return get(branchUri)\n    .then((res) => {\n      return dispatch({\n        type: FETCH_BRANCHES_SUCCESS,\n        payload: {\n          ...payload,\n          branches: res.data,\n        },\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: FETCH_BRANCHES_FAILURE,\n        payload,\n        error,\n      })\n    );\n};\n\nexport const fetchTable = (payload) => (dispatch) => {\n  const { branch, table } = payload;\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload,\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}?cb=${Date.now()}`)\n    .then((res) =>\n      dispatch({\n        type: FETCH_TABLE_SUCCESS,\n        payload: {\n          ...payload,\n          data: res.data,\n        },\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: FETCH_TABLE_FAILURE,\n        payload,\n        error,\n      })\n    );\n};\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const { branch } = payload;\n  // let's get the datapackage from the branch\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  try {\n    get(`${repoRawContent}/${branch}/datapackage.json`, {\n      responseType: \"json\",\n      responseEncoding: \"utf8\",\n    }).then((res) => {\n      const descriptor = res.data;\n      const tablesList = descriptor.resources.filter(\n        (r) => !r.group && r.name !== \"flows\"\n      );\n      dispatch({\n        type: FETCH_DATAPACKAGE_SUCCESS,\n        payload: descriptor,\n      });\n      // now we can get tables\n      dispatch({\n        type: FETCH_TABLES_REQUEST,\n      });\n      Promise.all(\n        tablesList.map((table) => {\n          return get(\n            //cb param is a cachebuster: we always want last versions\n            `${repoRawContent}/${branch}/${table.path}?cb=${Date.now()}`,\n            {\n              responseType: \"text\",\n              responseEncoding: \"utf8\",\n            }\n          ).then((res) => {\n            return { ...table, data: res.data };\n          });\n        })\n      )\n        .then((res) => {\n          let tables = {};\n          res.forEach((t) => {\n            tables[t.name] = t.data;\n          });\n          dispatch({\n            type: FETCH_TABLES_SUCCESS,\n            payload: tables,\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n          dispatch({\n            type: FETCH_TABLES_FAILURE,\n            payload,\n            error,\n          });\n        });\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error,\n    });\n  }\n};\n\nexport const updateRemoteFiles = (payload) => (dispatch) => {\n  dispatch({\n    type: UPDATE_REMOTE_FILES_REQUEST,\n  });\n  const { files, branch, auth, descriptor } = payload;\n\n  const github = new Octokat({\n    token: auth.token,\n  });\n\n  dispatch(async () => {\n    try {\n      let repo = await github.repos(owner, repoName).fetch();\n      let baseReference = await repo.git.refs(`heads/${branch}`).fetch();\n      let flowRessourceMultipart = descriptor.resources.find(\n        (r) => r.name === \"flows\"\n      );\n      let flowRessourceGroup = descriptor.resources.find(\n        (r) => r.group === \"flows\"\n      );\n      let treeItems = [];\n      for (let file of files) {\n        if (!file.sha && file.filePath.includes(\"flows\")) {\n          //new file flow ?\n          //check if file already exists\n          dispatch({\n            type: UPDATE_REMOTE_FILES_LOG,\n            payload: `downloading existing flows file ${file.filePath}`,\n          });\n          try {\n            const exists = await get(\n              `${repoRawContent}/${branch}/${file.filePath}`,\n              { responseType: \"text\", responseEncoding: \"utf8\" }\n            );\n            if (exists.status === 200) {\n              // append new rows at end of the existing file\n              file.data = csvParse(exists.data).concat(file.data);\n            }\n          } catch (error) {\n            if (error.response && error.response.status === 404) {\n              // that's a 404 error which is fine\n              // it's a new file, add it to the datapackage see issue #70\n              if (flowRessourceMultipart) {\n                flowRessourceMultipart.path.push(file.filePath);\n              } else if (flowRessourceGroup) {\n                const newRessource = { ...flowRessourceGroup };\n                newRessource.path = file.filePath;\n                newRessource.title = file.source;\n                descriptor.resources.push(newRessource);\n              }\n            } else {\n              console.log(error);\n              dispatch({\n                type: UPDATE_REMOTE_FILES_FAILURE,\n                error,\n              });\n              return;\n            }\n          }\n        }\n        dispatch({\n          type: UPDATE_REMOTE_FILES_LOG,\n          payload: `uploading ${file.filePath}`,\n        });\n        let fileGit = await repo.git.blobs.create({\n          // we force one final empty line\n          content: Base64.encode(unparse(file.data) + \"\\r\\n\"),\n          encoding: \"base64\",\n        });\n        treeItems.push({\n          path: file.filePath,\n          sha: fileGit.sha,\n          mode: \"100644\",\n          type: \"blob\",\n        });\n      }\n      // commit new version of the datapackage\n      dispatch({\n        type: UPDATE_REMOTE_FILES_LOG,\n        payload: `uploading datapackage`,\n      });\n      let fileGit = await repo.git.blobs.create({\n        content: Base64.encode(JSON.stringify(descriptor, null, 2)),\n        encoding: \"base64\",\n      });\n      let filePath = `datapackage.json`;\n      treeItems.push({\n        path: filePath,\n        sha: fileGit.sha,\n        mode: \"100644\",\n        type: \"blob\",\n      });\n      dispatch({\n        type: UPDATE_REMOTE_FILES_LOG,\n        payload: `creating tree`,\n      });\n      let tree = await repo.git.trees.create({\n        tree: treeItems,\n        base_tree: baseReference.object.sha,\n      });\n      dispatch({\n        type: UPDATE_REMOTE_FILES_LOG,\n        payload: `creating commit`,\n      });\n      let commit = await repo.git.commits.create({\n        message: auth.message || DEFAULT_MESSAGE,\n        tree: tree.sha,\n        parents: [baseReference.object.sha],\n      });\n\n      baseReference.update({ sha: commit.sha });\n      dispatch({\n        type: UPDATE_REMOTE_FILES_SUCCESS,\n        payload: commit.sha,\n      });\n    } catch (err) {\n      console.error(err);\n      dispatch({\n        type: UPDATE_REMOTE_FILES_FAILURE,\n        err,\n      });\n    }\n  });\n};\n\nexport const createBranch = (payload) => (dispatch) => {\n  dispatch({\n    type: CREATE_BRANCH_REQUEST,\n  });\n\n  const { auth, branch, reference } = payload;\n  const data = {\n    ref: `refs/heads/${branch}`,\n    sha: reference.sha,\n  };\n\n  return post(referenceUri, data, {\n    auth: {\n      username: auth.username,\n      password: auth.token,\n    },\n  })\n    .then((res) =>\n      dispatch({\n        type: CREATE_BRANCH_SUCCESS,\n        payload: {\n          name: auth.username,\n          ref: res.data,\n        },\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: CREATE_BRANCH_FAILURE,\n        error,\n      })\n    );\n};\n\nexport const logoutUser = () => ({\n  type: LOGOUT_USER,\n});\n\nexport const loginCreateBranch = (payload) => (dispatch) => {\n  dispatch({\n    type: LOGIN_CREATE_BRANCH_REQUEST,\n    payload,\n  });\n  const { token } = payload;\n\n  const github = new Octokat({\n    token: token,\n  });\n\n  dispatch(async () => {\n    try {\n      let userInfo = await github.user.fetch();\n      const username = userInfo.login;\n      let repo = await github.repos(owner, repoName).fetch();\n      let branches = await repo.branches.fetch();\n      let selectedBranch = branches.items.find(\n        (branch) => branch.name === username\n      );\n      if (!selectedBranch) {\n        const refBranch = branches.items.find(\n          (branch) => branch.name === DEFAULT_REF_BRANCH\n        );\n        selectedBranch = await repo.git.refs.create({\n          ref: `refs/heads/${username}`,\n          sha: refBranch.commit.sha,\n        });\n      }\n      dispatch({\n        type: LOGIN_CREATE_BRANCH_SUCCESS,\n        payload: {\n          name: username,\n          ref: selectedBranch,\n        },\n      });\n    } catch (error) {\n      console.error(error);\n      dispatch({\n        type: LOGIN_CREATE_BRANCH_FAILURE,\n        payload: {\n          error,\n        },\n      });\n    }\n  });\n};\n\n/**\n * REDUCER\n */\n\nconst initialState = {};\n\nexport default function reducer(state = initialState, action) {\n  const { payload } = action;\n  switch (action.type) {\n    case LOGOUT_USER:\n      return {\n        ...state,\n        isLogined: false,\n        tables: null,\n        selectedBranch: null,\n        isBranchCreated: false,\n      };\n    case INIT_TABLES:\n      return {\n        ...state,\n        tables: null,\n        remoteUpdateStatus: null,\n      };\n    case FETCH_TABLES_SUCCESS:\n      return {\n        ...state,\n        tables: payload,\n      };\n    case FETCH_TABLES_FAILURE:\n      return {\n        ...state,\n        tables: null,\n      };\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: payload,\n      };\n    case FETCH_BRANCHES_SUCCESS:\n      return {\n        ...state,\n        branches: payload.branches,\n      };\n    case LOGIN_CREATE_BRANCH_SUCCESS:\n      return {\n        ...state,\n        isLogined: true,\n        selectedBranch: payload,\n        isBranchCreated: true,\n      };\n    case LOGIN_CREATE_BRANCH_FAILURE:\n      return {\n        ...state,\n        isLogined: false,\n        selectedBranch: null,\n        isBranchCreated: false,\n      };\n    case UPDATE_REMOTE_FILES_REQUEST:\n      return {\n        ...state,\n        remoteUpdateStatus: \"loading\",\n        lastCommit: null,\n        remoteUpdateMessage: null,\n      };\n    case UPDATE_REMOTE_FILES_LOG:\n      return {\n        ...state,\n        remoteUpdateStatus: \"loading\",\n        remoteUpdateMessage: payload,\n      };\n    case UPDATE_REMOTE_FILES_SUCCESS:\n      return {\n        ...state,\n        remoteUpdateStatus: \"updated\",\n        lastCommit: payload,\n      };\n    case UPDATE_REMOTE_FILES_FAILURE:\n      return {\n        ...state,\n        remoteUpdateStatus: \"fail\",\n      };\n    default:\n      return state;\n  }\n}\n","import { createSelector } from 'reselect'\n\nimport {chunk, groupBy, sortBy, values } from 'lodash';\nimport {Resource} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {SET_STEP} from './ui';\n\nimport {DEFAULT_CHUNK_SIZE, RANKED_FIELDS} from '../../constants';\n\nimport {\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\nexport const REVALIDATE_ROWS_REQUEST = 'REVALIDATE_ROWS_REQUEST';\nexport const REVALIDATE_ROWS_SUCCESS = 'REVALIDATE_ROWS_SUCCESS';\nexport const REVALIDATE_ROWS_FAILURE = 'REVALIDATE_ROWS_FAILURE';\n\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\n// const getForeignKeyFields = (fields) => {\n//   return fields.reduce((res, field) => {\n//     if (typeof(field) === 'string') return res.concat([field]);\n//     else return res.concat(field)\n//   }, []);\n// } \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  // const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n  // TODO: hardcoded\n  const foreignKeysList = [\"source\", \"export_import\", \"special_general\", \"currency\"];\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const {rowNumber, originalRowNumber} = error;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                originalRowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  if (formatErrors['reporting'] || formatErrors['partner']) {\n    return formatErrors\n  }\n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      // const dataPackage = await Package.load(descriptor);\n      // resource = dataPackage.getResource(resourceName);\n      resource = Resource.load(descriptor);\n      await resource.read()\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nexport const revalidateRows = (payload) => (dispatch) => {\n  const {rowNumbers, originalValue, fixedValues, source, schema, relations} = payload;\n\n  dispatch({\n    type: REVALIDATE_ROWS_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source, {schema});\n      const rows = await table.read({forceCast: true, relations});\n      const errors = rows.filter((row) => row.errors);\n\n      if (errors.length) {\n        dispatch({\n          type: REVALIDATE_ROWS_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      } else {\n        dispatch({\n          type: REVALIDATE_ROWS_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: REVALIDATE_ROWS_FAILURE,\n        payload: {\n          status: 'done',\n          valid: false,\n          error\n        }\n      })\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunkSize = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      const headers = source[0];\n      const chunks = chunk(source.slice(1,), chunkSize);\n      let chunkIndex = 0\n      for (const chunkedTable of chunks) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${chunkIndex*chunkSize}/${tableLength-1} rows`\n          }\n        });\n        const table = await Table.load([headers].concat(chunkedTable), {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          for (const error of chunkErrors){\n            error.rowNumber = error.rowNumber + chunkSize * chunkIndex;\n            errors.push(error)\n          }\n        }\n        chunkIndex += 1;\n      };\n     \n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  resourceName: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  descriptor: null,\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state;\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: payload\n      }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\nconst getResourceName = state => state.schemaValidation.resourceName;\nconst getResources = state => state.schemaValidation.descriptor.resources;\nconst getTables = state => state.referenceTables.referenceTables;\n\nconst re = /row\\s\\d*/;\nexport const getGroupedErrors = (collectedErrors) => {\n  const errorsList = values(collectedErrors).reduce((res, item) => {\n    return res.concat(item.errors)\n  },[]);\n\n  const groupedErrorsList = \n    values(groupBy(errorsList,(v) => v.field + v.value))\n    .map((errors, index)=> {\n      // const fieldName = errors[0].field;\n      // let yearRange;\n      // if (fieldName === 'currency|year|reporting') {\n      //   const years = uniq(errors.map((error) => error.value.split('|')[1]));\n      //   yearRange = years.length > 1 ? `${min(years)}-${max(years)}` : years[0]\n      // }\n      // const value = fieldName !== 'currency|year|reporting' ? errors[0].value : `${errors[0].value.split('|')[0]}|${yearRange}|${errors[0].value.split('|')[2]}`\n      return {\n        index,\n        field: errors[0].field,\n        errorType: errors[0].errorType,\n        fixed: false,\n        message: errors[0].message.replace(re, `${errors.length} rows`),\n        originalValue: errors[0].value,\n        value: errors[0].value, \n        errors\n      }\n    });\n  return sortBy(groupedErrorsList, (field) => {\n    return RANKED_FIELDS[field.name]\n  });\n}\n\n/** \n* SELECTORS\n*/\n\n\nexport const getResourceSchema = createSelector(\n  getResourceName,\n  getResources,\n  (resourceName, resources) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName || (resource.group === resourceName && resource.schema));\n    return selectedResource.schema\n})\n\nexport const getRelations = createSelector(\n  getResourceName,\n  getResources,\n  getTables,\n  (resourceName, resources, referenceTables) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName || (resource.group === resourceName && resource.schema));\n    const relations = {};\n    if (!selectedResource) {\n      console.error(`the resource ${resourceName} could not be found!`)\n      return {};\n    }\n    if (selectedResource.schema) {\n      if (selectedResource.schema.foreignKeys) {\n        selectedResource.schema.foreignKeys.forEach((key) => {\n          const tableName = key.reference.resource;\n          relations[tableName] = referenceTables[tableName]\n        });\n        return relations;\n      }\n      else\n        return {};\n    }\n    else {\n      console.error(`the resource ${selectedResource.name} has no schema !`);\n      return {};\n    }\n  })","import React from 'react';\nimport {isNull, values, difference} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\nimport {NON_CHANGABLE_FIELDS} from '../constants'\n\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', ''];\n  const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors,originalValue, value, message, fixed, fixedValues} = item;\n              const fixedValue = values(fixedValues).join('|');\n\n              const isNonchangableField = difference(NON_CHANGABLE_FIELDS, field.split('|')).length < NON_CHANGABLE_FIELDS.length\n\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n              let isCurrencyFixDisabled = false;\n              if (item.field === 'currency|year|reporting' && yearFormatValues.indexOf(item.value.split('|')[1]) !== -1) {\n                isCurrencyFixDisabled = true\n              }\n\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              {originalValue !== value && <span className=\"has-text-danger\">{originalValue}-></span>}\n                              <span className=\"has-text-danger\">{isNull(value)? 'none' : value }</span>\n                              {fixed && <span className=\"has-text-success\">->{fixedValue === ''?'none': fixedValue}</span>}\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <p className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed && !isNonchangableField ? 'rows updated' : ''}</p>\n                              {\n                                item.fixedReferenceTable && item.fixedReferenceTable.length>0 &&\n                                  (\n                                    item.fixedReferenceTable.map((table, index)=> {\n                                      return (\n                                        <p key={index} className=\"has-text-success\">{table.data.length} row(s) added to \"{table.resourceName}\" table</p>\n                                      )\n                                    })\n                                  )\n                              }\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isDisabled={isCurrencyFixDisabled} isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field, value, fixedValues} = modificationItem;\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'} style={{height: '100%'}}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n                        let fixedValue;\n                        const errorColumnIndex = field.split('|').indexOf(columnName);\n                        let originalValue = (''+value).split('|')[errorColumnIndex];\n                        if (columnName === 'year' && errorColumnIndex===1) {\n                          originalValue = flows[error.rowNumber - 1][columnIndex]\n                        }\n                        if (fixedValues && errorColumn) {\n                          fixedValue = fixedValues[columnName].length === 0 ? 'none' : fixedValues[columnName];\n                        }\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {errorColumn ? originalValue: flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                          {\n                            fixedValue && \n                              <span  className=\"has-text-success\">->{fixedValue}</span>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","import {sortedUniq, sortBy, countBy, toPairs, uniq} from 'lodash';\n\nexport const getEnumOptions = (enumList) => {\n  const options = enumList.map((e) => {\n    return {\n      label: e,\n      value: e\n    }\n  })\n  return options\n}\n\nexport const getOptions = ({tables, resourceName, referenceField, filter}) => {\n  let values;\n  if (filter) {\n    values = tables[resourceName]\n            .filter((item) => item[filter.field] !== filter.value)\n            .map((item) => item[referenceField])\n  }\n  else {\n    values = tables[resourceName].map((item) => item[referenceField])\n  }\n  const valuesCounted = countBy(values, v => v)\n  const uniqValues = sortBy(toPairs(valuesCounted), ([k,v]) => -1*v).map(([k,v])=>k);\n\n  return uniqValues.map((item) => {\n    return {\n      value: item,\n      label: item\n    }\n  })\n}","\nimport React from 'react';\n\nimport {Field} from 'tableschema';\nimport {findIndex} from 'lodash';\n\nimport Select from 'react-select';\nimport Autosuggest from 'react-autosuggest';\n\nimport matchSorter from 'match-sorter';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n} from 'design-workshop'\n\n\nimport {getEnumOptions, getOptions} from '../utils/formUtils';\n\n\nclass FieldInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps();\n  }\n\n  componentDidUpdate (prevProps) {\n    const {fieldDescriptor, fieldValue, fixedValue} = this.props;\n    if (fieldDescriptor.name === 'slug' && fieldValue !== prevProps.fieldValue) {\n      this.validateField(fieldValue)\n    }\n    if (fixedValue !== prevProps.fixedValue && !fixedValue) {\n      const state = this.getStateFromProps();\n      this.setState({\n        ...state\n      })\n    }\n  }\n\n  getStateFromProps = () => {\n    const {fieldDescriptor, fieldValue} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n    \n    let options;\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum)\n    }\n    return {\n      fieldSchema,\n      value: fieldValue || '',\n      fieldValid: {\n        valid: false\n      },\n      options,\n      suggestions: []\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    let payload\n    try {\n      fieldSchema.castValue(value);\n      payload  = {\n        value,\n        fieldValid: {\n          valid: true\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      })\n    } catch(error) {\n      payload = {\n        value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    let value;\n    if(!event) {\n      value = '';\n      this.validateField(value);\n    }\n    else if(event && event.value) {\n      this.validateField(event.value);\n    }\n    else if (event && event.target) {\n      this.validateField(event.target.value);\n    }\n    else {\n      this.validateField('')\n    }\n  }\n\n  handleClickCreate = () => {\n    const field = this.props.foreignKeys.find((f) => f.fields === this.state.fieldSchema.name);\n    this.handleChange('');\n    this.props.onClickCreate({\n      referenceMap: {\n        field: this.state.fieldSchema.name,\n        referenceField: field ? field.reference.fields : this.state.fieldSchema.name\n      }\n    })\n  }\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = (value, suggestedOptions) => {\n    const getSuggestions = (value, options) => {\n      const inputValue = value.trim().toLowerCase();\n      const inputLength = inputValue.length;\n\n      return inputLength === 0 ? [] : options.filter(option =>\n        option.toLowerCase().slice(0, inputLength) === inputValue\n      );\n    };\n    this.setState({\n      suggestions: getSuggestions(value, suggestedOptions)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  handleSuggestionChange =  (event, { newValue }) => {\n    this.validateField(newValue)\n  };\n\n\n  // Use your imagination to render suggestions.\n  renderSuggestion = suggestion => (\n    <div>\n      {suggestion}\n    </div>\n  );\n\n\n  renderField() {\n    const {fieldValue, foreignKeys, referenceTables, showNewReference, newReference, isNonchangable, isValidationField, suggestedOptions} = this.props;\n    const {fieldSchema, value, suggestions} = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: '',\n      value,\n      onChange: this.handleSuggestionChange\n    };\n\n    let isReferenceField = false;\n    \n    const handleSuggestionsFetchRequested = ({value}) => {\n      this.onSuggestionsFetchRequested(value, suggestedOptions)\n    }\n    let options;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    if (findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1) !== -1) {\n      const index = findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1)\n      const referenceField = foreignKeys[index].reference.fields;\n      isReferenceField = true;\n      \n      options = getOptions({\n        tables: referenceTables,\n        resourceName: foreignKeys[index].reference.resource,\n        referenceField: typeof(referenceField) === 'object' ? referenceField[0]: referenceField\n      });\n    }\n\n    if (isNonchangable) {\n      return (<span>{fieldValue}</span>)\n    }\n    else if (isReferenceField) {\n      return (\n        <div>\n          {\n            !showNewReference && !newReference &&\n            <Select isSearchable={true}\n              isClearable={true}\n              value={generateValue(value)}\n              options={this.state.options}\n              onChange={this.handleChange} \n              onInputChange={inputValue => {\n                this.setState({ options : (matchSorter(options, inputValue, {keys: ['label']}).slice(0,50))});\n              }}\n              />\n          }\n          {\n            newReference &&\n            <div>{fieldValue}</div>\n          }\n          {\n            (!this.state.value || isValidationField)  &&\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n          } \n        </div>\n      )\n    }\n    else if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      return (\n        <Select isClearable={true}\n        value= {generateValue(value)}\n        options={this.state.options}\n        onChange={this.handleChange} />\n      )\n    }\n    else if (suggestedOptions) {\n      return <Autosuggest\n      suggestions={suggestions}\n      onSuggestionsFetchRequested={handleSuggestionsFetchRequested}\n      onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n      getSuggestionValue={(value) => value}\n      renderSuggestion={this.renderSuggestion}\n      inputProps={inputProps} />\n    }\n    else {\n      return (\n        <Input\n        value={value}\n        onChange={this.handleChange} />\n      )\n    }\n  }\n\n  render() {\n    const {fieldSchema, fieldValid} = this.state;\n    const {showNewReference, newReference} = this.props;\n    return (\n      <FieldContainer>\n        <Label>\n          {fieldSchema.name}\n          {\n            fieldSchema.constraints && fieldSchema.constraints.required &&\n            <span>*</span>\n          }\n        </Label>\n        <Control>\n          {this.renderField()}\n        </Control>\n        {\n          fieldValid && fieldValid.error && !showNewReference && !newReference &&\n            <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n        }\n      </FieldContainer> \n    )\n  }\n}\n\nexport default FieldInput;","import React from 'react';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop'  \n\nimport FieldInput from './FieldInput';\n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState();\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      });\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    return {\n      fixedValue: null,\n      showSolving: !modificationItem.fixed,\n      fieldValid: null\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {value, fieldValid} = payload;\n    this.props.onTouch(true)\n    this.setState({\n      fixedValue: value,\n      fieldValid\n    })\n  }\n\n\n  handleSubmitForm = () => {\n    const {modificationItem} = this.props;\n    const {fixedValue, fieldValid} = this.state;\n    if(!fieldValid || !fieldValid.valid) return;\n    const fixedValues = {\n      [modificationItem.field]: fixedValue\n    }\n    this.props.onSubmitForm({fixedValues});\n  }\n\n  handleShowSolving = () => {\n    this.props.onTouch(true)\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.props.onTouch(false)\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  handleDiscard = () => {\n    this.props.onTouch(false);\n    const state = this.hydrateState()\n    this.setState({\n      ...state\n    });\n    this.props.onDiscard()\n  }\n\n  renderOriginal() {\n    const {modificationItem} = this.props;\n    const {value, message, field}= modificationItem;\n\n    return (\n      <FieldContainer>\n        <Label>Original value of \"{field}\":</Label>\n        <strong>{value.length === 0 ? 'none': value}</strong>\n        <Help isColor=\"danger\">{message}</Help>\n      </FieldContainer>\n    )\n  }\n\n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {fixedValues, field, errors}= modificationItem;\n    const printValue = fixedValues[field].length === 0 ? 'none' : fixedValues[field];\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">total {errors.length} rows affected</Help>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderInput() {\n    const {modificationItem, fieldDescriptor, isModificationTouched} = this.props;\n    const {fieldValid} = this.state;\n    const isSubmitDisabled = !fieldValid || !fieldValid.valid\n\n    return (\n      <div>\n        <Label>Fix with a new input</Label>\n        <FieldInput \n          isNonchangable={false}\n          fieldDescriptor={fieldDescriptor} \n          fieldValue={modificationItem.value}\n          fixedValue={this.state.fixedValue}\n          onChange={this.handleFieldChange} />\n          \n        <FieldContainer isGrouped>  \n          {/*\n             modificationItem.fixed &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n            </Control>\n          */}\n          {\n            isModificationTouched &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleDiscard}>Discard modification</Button>\n            </Control>\n          }\n          <Control>\n            <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {fixed}= modificationItem;\n    \n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize=\"1/2\">\n              {this.renderOriginal()}\n              {\n                fixed && !this.state.showSolving && this.renderFixed()\n              }\n              {\n                this.state.showSolving && this.renderInput()\n              }\n\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","import React from 'react';\nimport {\n  Label,\n} from 'design-workshop'\nconst NewResourceRow = ({resource}) => { \n  const {data, resourceName} = resource;\n  return (\n    <div style={{height: '40vh', overflow:'auto'}}>\n      <h3>{data.length} row(s) add to \"{resourceName}\" table</h3>\n      {\n        data.map((row)=> {\n          return (\n            Object.keys(row).map((key) => {\n              return (\n                <div key={key}>\n                  <Label>{key}:</Label>\n                  <p>{row[key]}</p>\n                </div>\n              )\n            })\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default NewResourceRow;","import React from 'react';\n\nimport {values, mapValues, sortBy, orderBy} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help\n} from 'design-workshop';\nimport Select from 'react-select';\n\nimport {getOptions} from '../utils/formUtils';\n\nimport FieldInput from './FieldInput';\n\nconst RANKED_FIELDS = {\n  \"type\": 0,\n  'RICname': 1,\n  \"continent\": 2,\n  \"COW_code\": 3\n}\n\nclass NewRICentityForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      // TODO: hardcoded\n      if (field.name === 'type') {\n        value = 'group';\n      }\n      if (field.name === 'continent') {\n        value = ''\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleChangeMulti = (event) => {\n    const {referenceTables} = this.props;\n    const table = referenceTables['ricentities'];\n\n    const getRICname = (list) => {\n      const orderedList = orderBy(list, [item => item.value.toLowerCase()], ['asc'])\n      return orderedList.map((item) => item.value).join(' & ');\n    }\n\n    const getContinent = (list, table) => {\n      const continents = list.map((item) => {\n        const findRow = table.find((row) => row['RICname'] === item.value);\n        return findRow.continent\n      });\n      if (continents.length > 1) return 'World';\n      else if (continents.length === 1) return continents[0];\n      return null;\n    }\n\n    const value = event ? getRICname(event) : '';\n    const multiParts = event ? event : [];\n    const continentValue = event ? getContinent(multiParts, table) : null;\n\n    // mockup validation\n    this.setState({\n      multiParts,\n      fields: {\n        ...this.state.fields,\n        RICname: {\n          fieldName: 'RICname',\n          value,\n          fieldValid:{\n            valid: value ==='' ? false: true,\n            error: value === ''? {message: 'field is required'} : null\n          }\n        },\n        continent: {\n          fieldName: 'continent',\n          value: continentValue,\n          fieldValid:{\n            valid: continentValue ==='' ? false: true,\n            error: continentValue === ''? {message: 'field is required'} : null\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    const {resourceDescriptor, referenceTables} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.fields, (item) => item.value || '')]\n        },\n        newReference: {\n          resourceName: 'ricentities_groups',\n          data: this.state.multiParts.map((part) => {\n            return {\n              'RICname_group': this.state.fields['RICname'].value,\n              'RICname_part': part.value\n            }\n          })\n        }\n      }\n      this.props.onAddNew(payload)\n    }\n\n    const sortedFields = sortBy(schema.fields, (field) => {\n      return RANKED_FIELDS[field.name]\n    })\n\n    const options = getOptions({\n      tables: referenceTables,\n      resourceName: 'ricentities',\n      referenceField: 'RICname',\n      filter: {\n        field: 'type',\n        value: 'group'\n      }\n    });\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            sortedFields.map((field, index) => {\n              if (field.name === 'RICname') {\n                const {value, fieldValid} = this.state.fields[field.name];\n                return (\n                  <FieldContainer>\n                    <Label>\n                      {field.name}\n                      {\n                        field.constraints && field.constraints.required &&\n                        <span>*</span>\n                      }\n                    </Label>\n                    <Control>\n                      <Select isSearchable={true}\n                          isClearable={true}\n                          isMulti\n                          value={this.state.multiParts}\n                          options={options}\n                          onChange={this.handleChangeMulti} />\n                        <div>{value}</div> \n                    </Control>\n                    {\n                      fieldValid && fieldValid.error && <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n                    }\n                  </FieldContainer> \n                )\n              } \n              return (\n                <FieldInput \n                  key={index}\n                  isNonchangable={field.name !== 'RICname'}\n                  referenceTables={referenceTables}\n                  fieldDescriptor={field} \n                  fieldValue={this.state.fields[field.name].value}\n                  onChange={this.handleFieldChange} />\n              )\n            })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length > 0}  onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewRICentityForm;","import React from 'react';\nimport {Table} from 'tableschema';\n\nimport {keys, values, mapValues, sortBy, uniq} from 'lodash';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n  Help,\n  Columns,\n  Column\n} from 'design-workshop';\n\nimport FieldInput from './FieldInput';\nimport NewResourceRow from './NewResourceRow';\nimport NewRICentityForm from './NewRICentityForm';\nimport {NON_CHANGABLE_FIELDS, SOURCE_SLUGIFY, SOURCE_SUGGESTION_FIELDS} from '../constants';\n\nconst castFormObject = (formObject) =>  mapValues(formObject, (v => v.value));\n\n\nclass ReferenceResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues, prefixedValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const newResource = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n\n      if (field.constraints && field.constraints.required) {\n        valid = false\n      }\n      if(originalValues && originalValues.find((item) => item.referenceField=== field.name) && field.name !== 'slug') {\n        value = originalValues.find((item) => item.referenceField=== field.name).value;\n        valid = true;\n      }\n      if (prefixedValues && prefixedValues[field.name]) {\n        value = prefixedValues[field.name];\n        valid = true\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      newResource,\n      showNewReference:false\n    }\n  }\n\n  getSlug = (payload) => {\n    let preFields = {\n      ...this.state.newResource,\n      [payload.fieldName]: payload\n    };\n    // remove field data structure to mimic source object\n    const value = SOURCE_SLUGIFY(castFormObject(preFields)) ;\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {resourceDescriptor} = this.props;\n\n    if (this.state.newResource['slug']) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        newResource: {\n          ...this.state.newResource,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    \n    if (resourceDescriptor.name === 'ricentities' && payload.fieldName === 'type' && payload.value === 'group') {\n      this.props.onSelectGroup()\n    }\n\n    this.setState({\n      newResource: {\n        ...this.state.newResource,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleShowNew = (payload) => {\n    this.setState({\n      showNewReference: true\n    })\n  }\n\n  handleHideNew = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      showNewReference: false,\n      newReference: null,\n      referenceMap: null,\n      isRICentityGroup: false,\n      prefixedValues: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleCreateNewReference = (payload) => {\n    const {referenceMap} = payload\n    const {field} = referenceMap;\n    this.setState({\n      showNewReference: true,\n      resourceValid: {\n        valid: true\n      },\n      referenceMap,\n      newReference: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleAddNewReference = (payload) => {\n    const {newResource, newReference} = payload;\n    const {field, referenceField} = this.state.referenceMap;\n    this.setState({\n      newReference: newResource,\n      newRefReference: newReference,\n      showNewReference: false,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: true},\n          value: newResource.data[0][referenceField]\n        }\n      }\n    })\n  }\n\n  handleResetNewReference = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      newReference: null,\n      newRefReference: null,\n      showNewReference: true,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleSelectGroup = () => {\n    this.setState({\n      isRICentityGroup: true\n    })\n  }\n\n  render() {\n    const {descriptor, resourceDescriptor, referenceTables, originalValues, prefixedValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.newResource).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const getReferenceDescriptor = () => {\n      if (schema.foreignKeys) {\n        const {reference} = schema.foreignKeys[0];\n        return descriptor.resources.find((resource) => resource.name === reference.resource);\n      }\n      return;\n    }\n    \n    const handleAddNew = async () =>{\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.newResource, (item) => item.value || '')]\n        },\n        newReference: this.state.newReference,\n        newRefReference: this.state.newRefReference\n      }\n\n      // TODO: hardcoded\n      if (resourceDescriptor.name === 'currencies' && !this.state.newReference) {\n        const source = [keys(payload.newResource.data[0])].concat([values(payload.newResource.data[0])]);\n        const relations = {\n          exchange_rates: referenceTables['exchange_rates']\n        };\n        let table;\n        const prefixedValues = {\n          \"modified_currency\": this.state.newResource['modified_currency'].value\n        }\n        try {\n          table = await Table.load(source, {schema});\n          const rows = await table.read({forceCast: true, relations});\n          const errors = rows.filter((row) => row.errors);\n          if (errors.length) {\n            this.setState({\n              prefixedValues,\n              resourceValid: {\n                valid: false,\n                message: errors[0].errors[0].errors[0].message\n              }\n            });\n          } else {\n            this.setState({\n              resourceValid: {valid: true}\n            })\n            this.props.onAddNew(payload)\n          }\n        } catch (error) {\n          this.setState({\n            prefixedValues,\n            resourceValid: {\n              valid: false,\n              message: error.message || 'validation fail'\n            }\n          });\n          console.error(error)\n        }\n      }\n      else this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <Columns>\n          <Column style={{height: '50vh', overflow:'auto'}}>\n            <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n            {\n              sortBy(schema.fields, (field) => field.constraints && field.constraints.required)\n              .map((field, index) => {\n                let suggestedOptions;\n                if (resourceDescriptor.name === 'sources' && SOURCE_SUGGESTION_FIELDS.indexOf(field.name)!== -1) {\n                  suggestedOptions = uniq(referenceTables['sources'].map((d) => d[field.name]))\n                }\n                return (\n                  <FieldInput \n                    key={index}\n                    isNonchangable={NON_CHANGABLE_FIELDS.indexOf(field.name) !==-1 || (prefixedValues && prefixedValues[field.name])}\n                    isValidationField={this.state.prefixedValues && this.state.prefixedValues[field.name]}\n                    fieldDescriptor={field}\n                    foreignKeys={schema.foreignKeys}\n                    referenceTables={referenceTables}\n                    suggestedOptions={suggestedOptions}\n                    fieldValue={(this.state.newResource[field.name] && this.state.newResource[field.name].value) || (prefixedValues && prefixedValues[field.name])}\n                    showNewReference={this.state.showNewReference}\n                    newReference={this.state.newReference}\n                    onClickCreate={this.handleCreateNewReference}\n                    onChange={this.handleFieldChange} />\n                )\n              })\n            }\n            {\n              this.state.resourceValid && this.state.resourceValid.message &&\n              <FieldContainer>\n                <Help isColor=\"danger\">{this.state.resourceValid.message}</Help>\n              </FieldContainer>\n            }\n          </Column>\n          {schema.foreignKeys && \n          <Column>\n            {this.state.showNewReference && \n            (this.state.isRICentityGroup ?\n              <NewRICentityForm\n                descriptor={descriptor}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} /> :\n              <ReferenceResourceForm\n                descriptor={descriptor}\n                originalValues={originalValues.filter((item)=> item.field === 'year')}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                prefixedValues={this.state.prefixedValues}\n                onSelectGroup={this.handleSelectGroup}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} />\n            )\n            }\n            {this.state.newReference && \n              <div>\n                <NewResourceRow resource={this.state.newReference} />\n                <Button onClick={this.handleResetNewReference}>Reset</Button>\n              </div>\n            }\n          </Column>}\n          {schema.foreignKeys && this.state.newRefReference && \n            <Column>\n              <NewResourceRow resource={this.state.newRefReference} />\n            </Column>\n          }\n        </Columns>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default ReferenceResourceForm;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {values, difference} from 'lodash'\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop';\n\nimport {NON_CHANGABLE_FIELDS, LABEL_FIELDS_FK_SOLVED} from '../constants'\n\nimport {validateResource} from '../redux/modules/schemaValidation';\n\nimport NewResourceRow from './NewResourceRow';\nimport ReferenceResourceForm from './ReferenceResourceForm';\nimport FieldInput from './FieldInput';\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState();\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  initFixedValues = () => {\n    const {modificationItem} = this.props;\n    const fieldList = modificationItem.field.split('|');\n    return fieldList.reduce((res, field) => {\n      return {\n        ...res,\n        [field]: undefined\n      }\n    }, {});\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    let fixedValues = this.initFixedValues()\n    if (modificationItem.fixedValues) fixedValues = modificationItem.fixedValues\n\n    return {\n      fixedValues,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null,\n      showSolving: !modificationItem.fixed,\n    }\n  }\n\n  handleSubmitForm = () => {\n    const {fixedValues, newResource, newReference, newRefReference} = this.state;\n    // if(!fixedValue || fixedValue.length === 0) return;\n    let fixedReferenceTable = []\n    if (newResource) {\n      fixedReferenceTable.push(newResource);\n    }\n    if (newReference) {\n      fixedReferenceTable.push(newReference);\n    }\n    if (newRefReference) {\n      fixedReferenceTable.push(newRefReference);\n    }\n\n    this.props.onSubmitForm({\n      fixedValues,\n      fixedReferenceTable\n    });\n  }\n\n  handleClickCreate = () => {\n    this.props.onTouch(true);\n    const fixedValues = this.initFixedValues();\n    this.setState({\n      fixedValues,\n      showSolving: true,\n      showNewForm: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleResetCreate = () => {\n    this.setState({\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleAddNewResource = (payload) => {\n    const {newResource, newReference, newRefReference} = payload;\n    const {modificationItem, foreignKeyField} = this.props;\n\n    const fieldList = modificationItem.field.split('|');\n    const fixedValues = fieldList.reduce((res, field, index) => {\n      let fixedValue = fieldList.length > 1 ? newResource.data[0][foreignKeyField.reference.fields[index]]:\n                                              newResource.data[0][foreignKeyField.reference.fields]\n      const special_field_for_label = LABEL_FIELDS_FK_SOLVED[field];\n      if (special_field_for_label && special_field_for_label in newResource.data[0]) {\n        fixedValue = newResource.data[0][special_field_for_label]\n      }\n      return {\n        ...res,\n        [field]: fixedValue\n      }\n    }, {})\n    this.setState({\n      newResource,\n      newReference,\n      newRefReference,\n      fixedValues,\n      showNewForm: false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleSelectExist = (item) => {\n    const {modificationItem} = this.props;\n    this.props.onTouch(true)\n    if (!item) {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: ''\n        }\n      })\n    }\n    else {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: item.value\n        },\n        newResource: null\n      })\n    }\n  }\n\n  handleShowSolving = () => {\n    this.props.onTouch(true);\n    const fixedValues = this.initFixedValues();\n\n    this.setState({\n      fixedValues,\n      showSolving: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleHideSolving = () => {\n    this.props.onTouch(false)\n    this.setState({\n      showSolving: false,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleDiscard = () => {\n    const {modificationItem} = this.props;\n    this.props.onTouch(false);\n    const fixedValues = this.initFixedValues();\n    this.setState({\n      fixedValues,\n      showSolving: modificationItem.fixed ? false : true,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    });\n    this.props.onDiscard()\n  }\n  \n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {field, fixedValues, fixedReferenceTable, unchangable, fixedStatus}= modificationItem;\n    const fixedValue = values(fixedValues).join('|');\n    const printValue = fixedValue.length ? fixedValue: 'none';\n    const isNonchangableField = difference(NON_CHANGABLE_FIELDS, field.split('|')).length < NON_CHANGABLE_FIELDS.length\n\n    return (\n      <FieldContainer>\n        <Control>\n\n          <Label className=\"has-text-success\">Fixed with value</Label>\n          <p className=\"has-text-success\">{printValue}</p>\n          <Help isColor=\"success\">\n            {!isNonchangableField && <li>total {modificationItem.errors.length} rows updated</li>}\n            {\n              fixedReferenceTable && fixedReferenceTable.map((table, i)=> {\n                return (\n                  <li key={i}>{table.data.length} row(s) added to \"{table.resourceName}\" table</li>\n                )\n              })\n            }\n          </Help>\n          {!this.state.showSolving && <Button isColor=\"info\" isDisabled={unchangable} onClick={this.handleShowSolving}>Change this fix</Button>}\n          {unchangable && fixedStatus === 'fixInOther' &&<Help isColor=\"success\">found same value in other error, please fix it there</Help>}\n          {unchangable && fixedStatus === 'autoFixed' &&<Help isColor=\"success\">this foreign key error is auto fixed by previous format modification</Help>}\n        </Control>\n      </FieldContainer>\n    )\n  }\n\n  renderSolving() {\n    const {modificationItem, referenceTables, isCurrencyFixDisabled, schema} = this.props;\n\n    const fieldDescriptor = schema.fields.find((f) => f.name === modificationItem.field)\n    \n    return (\n      <div>\n        {modificationItem.field === 'source' && !this.state.showNewForm && !this.state.newResource &&\n          <FieldInput \n            isNonchangable={false}\n            foreignKeys={schema.foreignKeys}\n            fieldDescriptor={fieldDescriptor} \n            referenceTables={referenceTables}\n            fixedValue={this.state.fixedValues[modificationItem.field]}\n            fieldValue={this.state.fixedValues[modificationItem.field]}\n            onClickCreate={this.handleClickCreate}\n            onChange={this.handleSelectExist} />\n        }\n        {\n          modificationItem.field !== 'source' &&\n          <FieldContainer>\n            <Control>\n              {isCurrencyFixDisabled && <Help isColor=\"danger\">Please fix year format error first</Help>}\n              <Button isDisabled={isCurrencyFixDisabled} isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n            </Control>\n          </FieldContainer>  \n        }\n      </div>\n      )\n  }\n\n  render() {\n    const {modificationItem, foreignKeyField, descriptor, referenceTables, isModificationTouched} = this.props;\n    const {value, message, field}= modificationItem;\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceFieldResource = descriptor.resources.find((resource) => resource.name === resourceName);\n    \n    const getLayoutColumns = (field) => {\n      switch(field) {\n        case 'reporting':\n        case 'partner':\n        case 'currency|year|reporting':\n          return '1/4'\n        default:\n          return '1/2'\n      }\n    }\n    const validateFixedValues = () => {\n      if (field.split('|').length > 0) {\n        const invalidValue = values(this.state.fixedValues).filter((fixedValue) => fixedValue === undefined);\n        return invalidValue.length > 0;\n      } else return this.state.fixedValues[field] === undefined;\n    }\n    const mapFieldValue = (field, value) => {\n      return field.split('|').map((f, index) => {\n        return  {\n          value: value.split('|')[index],\n          field: f,\n          referenceField: typeof(foreignKeyField.reference.fields) === 'string' ?\n            foreignKeyField.reference.fields:foreignKeyField.reference.fields[index]\n        }\n      })\n    }\n    const originalValues = mapFieldValue(field, value);\n\n    const layoutColumn = getLayoutColumns(modificationItem.field);\n\n    const isSubmitDisabled = validateFixedValues();\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize={layoutColumn}>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {!this.state.showSolving && modificationItem.fixed && this.renderFixed()}\n              {this.state.showSolving && this.renderSolving()}\n            </Column>\n            { this.state.showNewForm && \n              <Column className='new-resource-form' style={{flex: 'auto'}}>\n                <ReferenceResourceForm \n                  originalValues={originalValues}\n                  descriptor={descriptor}\n                  resourceDescriptor={referenceFieldResource}\n                  referenceTables={referenceTables}\n                  onCancel={this.handleCancel}\n                  onAddNew={this.handleAddNewResource} />\n              </Column>\n            }\n            {\n              this.state.newResource && \n              <Column>\n                <NewResourceRow resource={this.state.newResource}/>\n                <Button onClick={this.handleClickCreate}>Reset</Button>\n              </Column>\n            }\n            {\n              this.state.newReference && \n              <Column>\n                <NewResourceRow resource={this.state.newReference}/>\n              </Column>\n            }\n            {\n              this.state.newRefReference && \n              <Column>\n                <NewResourceRow resource={this.state.newRefReference}/>\n              </Column>\n            }\n          </Columns>\n          {\n            this.state.showSolving &&\n            <FieldContainer isGrouped>\n              {/* {\n                modificationItem.fixed &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n                </Control>\n              } */}\n              {\n                isModificationTouched &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleDiscard}>Discard modification</Button>\n                </Control>\n              }\n              <Control>\n                <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n              </Control>\n            </FieldContainer>\n          }\n\n        </form>\n      </div>\n    )\n  }\n}\nexport default connect(null, {\n  validateResource\n})(ForeignKeyCorrection);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {isEqual} from 'lodash';\n\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  referenceTables,\n  descriptor,\n  schema,\n  isCurrencyFixDisabled,\n  isModificationTouched,\n  modificationItem,\n  modificationIndex,\n  onDiscard,\n  onTouch,\n  onSubmitModification,\n}) => {\n  const handleSubmitModification = (payload) => {\n    const {fixedValues, fixedReferenceTable} = payload;\n    return onSubmitModification({\n      ...modificationItem,\n      fixedValues,\n      fixedReferenceTable,\n      index: modificationIndex\n    })\n  }\n\n  const getFieldDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  const getForeignKeyField = () => {\n    let foreignKeyField;\n    if (modificationItem.field.indexOf('|') !== -1) {\n      const fieldList = modificationItem.field.split('|');\n      foreignKeyField = schema.foreignKeys.find((f) => isEqual(f.fields, fieldList));\n    }\n    else {\n      foreignKeyField = schema.foreignKeys.find((f) => f.fields === modificationItem.field);\n    }\n    return foreignKeyField;\n  }  \n  return (\n    <div>\n      {\n        modificationItem.errorType === 'ERROR_FORMAT' &&\n        <FormatCorrection \n          fieldDescriptor={getFieldDescriptor()} \n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          isModificationTouched={isModificationTouched}\n          onDiscard={onDiscard}\n          onTouch={onTouch}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      {\n        modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n        <ForeignkeyCorrection \n          schema={schema}\n          descriptor={descriptor}\n          foreignKeyField={getForeignKeyField()}\n          isCurrencyFixDisabled={isCurrencyFixDisabled}\n          isModificationTouched={isModificationTouched}\n          referenceTables={referenceTables}\n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onDiscard={onDiscard}\n          onTouch={onTouch}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      <ContextTable flows={flows} modificationItem={modificationItem} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  descriptor: state.schemaValidation.descriptor,\n  referenceTables: state.referenceTables.referenceTables\n});\n\nexport default connect(mapStateToProps)(ModificationComponent);","import React from 'react';\n\nimport {\n  Card,\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalClose\n} from 'design-workshop';\n\n\nconst AlertModal = ({\n  isActive,\n  closeModal\n}) => {\n  return (\n    <Modal isActive={isActive}>\n      <ModalBackground onClick={closeModal} />\n      <ModalContent>\n        <Card bodyContent=\"You have made a modification, please confirm your fix first?\" />\n      </ModalContent>\n      <ModalClose onClick={closeModal} />\n    </Modal>\n  )\n}\n\nexport default AlertModal","import React from 'react';\nimport {connect} from 'react-redux';\nimport {findIndex} from 'lodash';\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {updateFlows} from '../../redux/modules/flows';\nimport {revalidateRows} from '../../redux/modules/schemaValidation';\nimport {submitModification} from '../../redux/modules/modification';\nimport {getResourceSchema} from '../../redux/modules/schemaValidation';\nimport {addTableRow, deleteTableRow} from '../../redux/modules/referenceTables';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\nimport AlertModal from '../../components/AlertModal';\n\nclass DataModification extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false,\n      isModificationTouched: false\n    }\n  }\n\n  handleTouchModification = (touched) => {\n    this.setState({\n      isModificationTouched: touched\n    })\n  }\n\n  handleShowAlert = () => {\n    this.setState({\n      showAlert: true\n    })\n  }\n\n  handleHideAlert = () => {\n    this.setState({\n      showAlert: false\n    })\n  }\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList, referenceTables, steps, selectedStep} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false);\n    const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n    const modificationItem = modificationList[modificationIndex]\n    let isCurrencyFixDisabled = false;\n    if (modificationItem.field === 'currency|year|reporting' && yearFormatValues.indexOf(modificationItem.value.split('|')[1]) !== -1) {\n      isCurrencyFixDisabled = true\n    }\n    \n    const handlePrevStep = () => {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex-1])\n    }\n    const handleNextStep = () =>  {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex+1])\n    }\n\n    const handlePrevError = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleDiscard = () => {\n      if ( modificationIndex < modificationList.length - 1 && nonFixedList.length > 0) {\n        this.props.goNextError();\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    const handleHideModification = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      this.props.hideModification();\n    }\n    \n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = (payload) => {\n      const {errors, errorType, fixedReferenceTable} = payload;      \n    \n      if (errorType === 'ERROR_FORMAT' || payload.field === 'source') {\n        this.props.updateFlows(payload);\n      }\n      \n      if(payload.field === 'year') {\n        const rowNumbers = errors.map((e) => e.rowNumber);\n        const columnIndex = flows[0].indexOf('year');\n        const source = [flows[0]].concat(errors.map((e) => {\n          const row = [...flows[e.rowNumber -1]]\n          row[columnIndex] = payload.fixedValues['year'];\n          return row;\n        }));\n        const relations = {currencies: referenceTables['currencies']}\n        this.props.revalidateRows({\n          originalValue: payload.value,\n          fixedValues: payload.fixedValues,\n          rowNumbers,\n          source,\n          schema,\n          relations,\n        });\n      }\n\n      if (errorType === 'ERROR_FOREIGN_KEY') {\n        const prevFixedReferenceTable = modificationItem.fixedReferenceTable;\n        if (prevFixedReferenceTable && fixedReferenceTable) {\n          prevFixedReferenceTable.forEach((table) => {\n            this.props.deleteTableRow(table);\n          })\n        }\n        fixedReferenceTable.forEach((table) => {\n          this.props.addTableRow(table)\n        })\n      }\n\n      this.props.submitModification(payload);\n\n      this.setState({\n        isModificationTouched: false\n      });\n\n      if ( modificationIndex < modificationList.length - 1 && nonFixedList.length > 0) {\n        this.props.goNextError()\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              isCurrencyFixDisabled={isCurrencyFixDisabled}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationItem} \n              isModificationTouched={this.state.isModificationTouched}\n              onTouch={this.handleTouchModification}\n              onDiscard={handleDiscard}\n              onSubmitModification={handleSubmitModification} />\n            \n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={handleHideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <span>{(this.state.showAlert).toString()}</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n            <AlertModal isActive={this.state.showAlert} closeModal={this.handleHideAlert} />\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  referenceTables: state.referenceTables.referenceTables,\n  schema: getResourceSchema(state),\n  modificationList: state.modification.modificationList,\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  isModification: state.ui.isModification,\n  modificationIndex: state.modification.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  updateFlows,\n  addTableRow,\n  deleteTableRow,\n  revalidateRows,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import XLSX from \"xlsx\";\n\nimport FileSaver from \"file-saver\";\nimport { unparse } from \"papaparse\";\n\nexport function downloadFlow(array, fileName, ext) {\n  let file;\n  const header = array[0];\n  switch (ext) {\n    case \"csv\":\n    default: {\n      const csvString = unparse(array) + \"\\r\\n\";\n      file = new File([csvString], `${fileName}.${ext}`, {\n        type: \"text/csv;charset=utf-8\",\n      });\n      FileSaver.saveAs(file);\n      break;\n    }\n    case \"xlsx\": {\n      const sheet = XLSX.utils.aoa_to_sheet(array, { header });\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, sheet, \"SheetJS\");\n      XLSX.writeFile(wb, `${fileName}.${ext}`);\n      break;\n    }\n  }\n}\n\nexport function downloadTable(array, fileName, ext) {\n  let file;\n  switch (ext) {\n    case \"csv\":\n    default: {\n      const csvString = unparse(array) + \"\\r\\n\";\n      file = new File([csvString], `${fileName}.${ext}`, {\n        type: \"text/csv;charset=utf-8\",\n      });\n      FileSaver.saveAs(file);\n      break;\n    }\n  }\n}\n","import React from 'react';\nimport {\n  Button,\n  Field,\n  Label,\n  Input,\n  Control,\n  Help\n} from 'design-workshop';\n\nimport {\n  Modal,\n  ModalBackground,\n  ModalClose,\n  ModalCard,\n  ModalCardBody,\n} from 'bloomer';\n\n\nclass GithubAuthModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: '',\n      message: ''\n    };\n  }\n\n  handleChangeToken = (event) => {\n    this.setState({\n      token: event.target.value\n    });\n  }\n\n  handleChangeMessage = (event) => {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n\n  handleSubmit = () => {\n    this.props.onSubmitAuth(this.state)\n  }\n\n  render() {\n    const {isActive, isCommit, closeModal} = this.props;\n    let invalidInput = !this.state.token;\n    \n    if (isCommit) {\n      invalidInput = !this.state.token || !this.state.message;\n    }\n\n    return (\n      <Modal isActive={isActive}>\n        <ModalBackground onClick={closeModal} />\n        <ModalCard>\n          <ModalCardBody>\n            <Field>\n              <Label>personal access token*:</Label>\n              <Control>\n                <Input type=\"password\" value={this.state.token} onChange={this.handleChangeToken} />\n              </Control>\n            </Field>\n            {isCommit && \n              <Field>\n                <Label>commit message*:</Label>\n                <Control>\n                  <Input value={this.state.message} onChange={this.handleChangeMessage} />\n                </Control>\n              </Field>\n            }\n            <Field>\n              {invalidInput &&<Help isColor=\"danger\">requied field is missing</Help>}\n              <Button isDisabled={invalidInput} isColor=\"info\" onClick={this.handleSubmit}>{isCommit ? 'Commit': 'Login'}</Button>\n            </Field>\n          </ModalCardBody>\n        </ModalCard>\n        <ModalClose onClick={closeModal} />\n      </Modal>\n    )\n  }\n}\n\nexport default GithubAuthModal;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { groupBy, keyBy } from \"lodash\";\n\nimport { Button, Control, Field, Columns, Column, Help } from \"design-workshop\";\n\nimport { csvFormatRows, csvParse } from \"d3-dsv\";\n\nimport { exportFlows } from \"../../redux/modules/flows\";\nimport { setStep } from \"../../redux/modules/ui\";\n\nimport { updateRemoteFiles } from \"../../redux/modules/repoData\";\n\nimport { downloadFlow, downloadTable } from \"../../utils/fileExporter\";\nimport GithubAuthModal from \"../../components/GithubAuthModal\";\n\nimport { SOURCE_SLUG_FILENAME } from \"../../constants\";\nimport { owner, repoName } from \"../../config/default\";\n\nclass DataPublish extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false,\n    };\n  }\n\n  handleOpenModal = () => {\n    this.setState({ isModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ isModalShow: false });\n  };\n\n  render() {\n    const { flows, repoData, referenceTables, originalLength } = this.props;\n    const {\n      selectedBranch,\n      remoteUpdateStatus,\n      lastCommit,\n      remoteUpdateMessage,\n      tables,\n    } = repoData;\n\n    let updatedTables = [];\n\n    Object.keys(referenceTables).forEach((name) => {\n      if (referenceTables[name].length !== originalLength[name]) {\n        updatedTables.push({\n          name,\n          updatedRows: referenceTables[name].slice(originalLength[name]),\n        });\n      }\n    });\n\n    const handleExportFlow = () => {\n      const { file, data } = flows;\n      downloadFlow(data, `${file.name}_corrections`, \"csv\");\n    };\n\n    let groupedFlows = {};\n    try {\n      // group flows by source filename\n      // we need to source metadata to generate source filename\n      const sources = keyBy(referenceTables.sources, (s) => s.slug);\n      // format + parse to go from array representation to list of obejct\n      const parsedFlows = csvParse(csvFormatRows(flows.data));\n      groupedFlows = groupBy(parsedFlows, (item) =>\n        SOURCE_SLUG_FILENAME(sources[item[\"source\"]])\n      );\n    } catch (e) {\n      //TODO: display error message to user\n      console.log(e);\n      setStep(2);\n    }\n\n    const handleUpdateRemoteFiles = (auth) => {\n      this.handleCloseModal();\n\n      const flowFiles = Object.keys(groupedFlows).map((file) => {\n        return {\n          filePath: `data/flows/${file}.csv`,\n          data: groupedFlows[file],\n          source: file,\n        };\n      });\n      const tableFiles = updatedTables.map((table) => {\n        const resource = this.props.repoData.descriptor.resources.find(\n        (r) => r.name === table.name);\n        if (!resource)\n          throw new Error(`Resource ${table.name} can't be found in descriptor.`);\n        return {\n          filePath: resource.path,\n          data: referenceTables[table.name],\n          sha: tables[table.name].sha,\n        };\n      });\n      this.props.updateRemoteFiles({\n        auth,\n        files: flowFiles.concat(tableFiles),\n        branch: selectedBranch.name,\n        descriptor: this.props.repoData.descriptor,\n      });\n    };\n    const handleStartOver = () => {\n      this.props.setStep({ id: \"0\" });\n    };\n\n    return (\n      <div>\n        <Columns>\n          <Column>\n            <strong>fixed flows table by source</strong>\n            {Object.keys(groupedFlows).map((source) => {\n              return <p>{source}.csv</p>;\n            })}\n          </Column>\n          <Column>\n            <div>\n              <strong>updated reference tables</strong>\n              {updatedTables.map((table) => {\n                const resource = this.props.repoData.descriptor.resources.find(\n                  (r) => r.name === table.name);\n                  if (!resource)\n                    throw new Error(`Resource ${table.name} can't be found in descriptor.`);\n                const fileName = resource.path.split(\".\")[0].split(\"/\").slice(-1)[0]\n                const handleExportTable = () => {     \n                  downloadTable(referenceTables[table.name], fileName, \"csv\");\n                };\n                return (\n                  <Control>\n                    <a href=\"#\" onClick={handleExportTable}>\n                      {fileName} table: {table.updatedRows.length} rows added\n                    </a>\n                  </Control>\n                );\n              })}\n            </div>\n          </Column>\n        </Columns>\n        <Field isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={handleExportFlow}>\n              Download fixed flows\n            </Button>\n          </Control>\n          <Control>\n            {remoteUpdateStatus === \"updated\" ? (\n              <Button isColor=\"success\" onClick={handleStartOver}>\n                Start a new import\n              </Button>\n            ) : (\n              <Button\n                isDisabled={remoteUpdateStatus === \"loading\"}\n                isColor=\"info\"\n                onClick={this.handleOpenModal}\n              >\n                Publish tables to \"{selectedBranch.name}\" branch\n              </Button>\n            )}\n          </Control>\n        </Field>\n        <Field>\n          {remoteUpdateStatus === \"loading\" && (\n            <Help isColor=\"success\">\n              updating files on github: {remoteUpdateMessage}...\n            </Help>\n          )}\n          {remoteUpdateStatus === \"updated\" && (\n            <Help isColor=\"success\">\n              files have been commited on github see{\" \"}\n              <a\n                href={`https://github.com/${owner}/${repoName}/commit/${lastCommit}`}\n              >\n                commit details\n              </a>\n            </Help>\n          )}\n          {remoteUpdateStatus === \"fail\" && (\n            <Help isColor=\"danger\">fail to update files on github</Help>\n          )}\n        </Field>\n        <GithubAuthModal\n          isActive={this.state.isModalShow}\n          isCommit={true}\n          closeModal={this.handleCloseModal}\n          onSubmitAuth={handleUpdateRemoteFiles}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  flows: state.flows,\n  referenceTables: state.referenceTables.referenceTables,\n  originalLength: state.referenceTables.originalLength,\n  repoData: state.repoData,\n});\n\nexport default connect(mapStateToProps, {\n  setStep,\n  exportFlows,\n  updateRemoteFiles,\n})(DataPublish);\n","import DataPublish from './DataPublish'\n\nexport default DataPublish","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {\n  Button,\n  Help\n} from 'design-workshop';\n\nimport { \n  fetchAllTables,\n} from '../../redux/modules/repoData';\n\nimport {loginCreateBranch, logoutUser} from '../../redux/modules/repoData';\n\nimport GithubAuthModal from '../../components/GithubAuthModal';\n\n\nclass DataPrep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false \n    }\n  }\n   \n  handleShowLogin =()=> {\n    this.setState({\n      isModalShow: true\n    })\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      isModalShow: false\n    })\n  }\n   \n  handleLogin = (payload) => {\n    this.props.loginCreateBranch(payload);\n    this.handleCloseModal()\n  }\n\n  renderFetchTable() {\n    const {repoData} = this.props;\n    const {selectedBranch, tables, isBranchCreated} = repoData;\n\n    const handleGetTables = () => {\n      this.props.fetchAllTables({branch: selectedBranch.name});\n    }\n\n    return (\n      <div>\n        {isBranchCreated ? \n          <Help isColor=\"success\">branch \"{selectedBranch.name}\" is created</Help> : \n          <Help isColor=\"danger\">could not get branch from github, try login again</Help>\n        }\n        {\n          selectedBranch && !tables && \n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch table from branch {selectedBranch.name}</Button>\n        }\n        {selectedBranch && (tables ?\n          <Help isColor=\"success\">tables from {selectedBranch.name} branch are loaded</Help>:\n          <Help isColor=\"danger\">tables are not loaded, please reload from {selectedBranch.name} branch</Help>)\n        }\n      </div>\n    )\n  }\n\n  render () {\n    const {repoData} = this.props;\n    const {selectedBranch, isLogined} = repoData;\n  \n    return (\n      <div>\n        {/* <Label>Get tables from {selectedBranch.name} branch</Label>\n          <Select value={selectedBranch} onChange={handleSelectBranch}>\n            {\n              branches.map((item, index) => {\n                return (\n                  <option key={index}>{item.name}</option>\n                )\n              })\n            }\n          </Select>\n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch</Button> */}\n          { !isLogined &&\n            <Button isColor=\"info\" onClick={this.handleShowLogin}>\n            <span>Login to get branch</span>\n            </Button>\n          }\n          {\n            isLogined &&\n            <Button isColor=\"info\" onClick={this.props.logoutUser}>\n              <span>Logout</span>\n            </Button>\n          }\n          {selectedBranch && this.renderFetchTable()}\n          <GithubAuthModal \n            isActive={this.state.isModalShow}\n            isCommit={false}\n            closeModal={this.handleCloseModal} \n            onSubmitAuth={this.handleLogin} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  loginCreateBranch,\n  fetchAllTables\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import React from 'react';\nimport {difference} from 'lodash';\n\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import { findIndex } from \"lodash\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Button, DropZone } from \"design-workshop\";\nimport { importFlows } from \"../../redux/modules/flows\";\n\nimport { setStep } from \"../../redux/modules/ui\";\n\nimport {\n  getResourceSchema,\n  validateHeader,\n} from \"../../redux/modules/schemaValidation\";\n\nimport DataPrep from \"../DataPrep\";\n\nimport HeaderValidation from \"../../components/HeaderValidation\";\n\nimport { MAXIMUM_FILE_SIZE } from \"../../constants\";\nimport { fetchAllTables } from \"../../redux/modules/repoData\";\nimport { parseSheet, parseTable } from \"../../utils/fileParser\";\n\nconst prepareFlowData = (data, schema) => {\n  // lower foreignKeys\n  const FKFieldsIndices = schema.foreignKeys\n    .map((fk) => (Array.isArray(fk.fields) ? fk.fields : [fk.fields]))\n    .reduce((set, fields) => {\n      //unique map results\n      fields.forEach((f) => {\n        // hardcoded exception...\n        if (f !== \"source\") {\n          const i = data[0].indexOf(f);\n          if (!set.includes(i)) set.push(i);\n        }\n      });\n      return set;\n    }, []);\n\n  // lowercase Reporting and partner + strip\n  return data.map((d, i) => {\n    if (i !== 0) {\n      return d.map((v, i) => {\n        // Foreign Key fields are forced lowercase and trimed to limit glue work\n        if (FKFieldsIndices.includes(i) && v.toLowerCase)\n          return v.toLowerCase().trim();\n        else return v;\n      });\n    } // don't touch headers..\n    else return d;\n  });\n};\n\nconst FileUpload = ({\n  steps,\n  selectedStep,\n  schema,\n  tables,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader,\n  repoData,\n  fetchAllTables,\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split(\".\")[1] === \"xlsx\") {\n      parseSheet(file)\n        .then((data) => {\n          data = prepareFlowData(data, schema);\n          importFlows({\n            file: {\n              name: file.name.split(\".\")[0],\n            },\n            data,\n          });\n          validateHeader({ source: data, schema });\n          fetchAllTables({ branch: repoData.selectedBranch.name });\n        })\n        .catch((error) => {\n          console.error(error);\n          console.error(\"fail to parse file\");\n        });\n    } else {\n      parseTable(file)\n        .then((data) => {\n          data = prepareFlowData(data, schema);\n          importFlows({\n            file: {\n              name: file.name,\n            },\n            data,\n          });\n          validateHeader({ source: data, schema });\n\n          fetchAllTables({ branch: repoData.selectedBranch.name });\n        })\n        .catch((error) => {\n          console.error(error);\n          console.error(\"fail to parse file\");\n        });\n    }\n  };\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\");\n  };\n  const handleNextStep = () => {\n    const currentIndex = findIndex(steps, selectedStep);\n    setStep(steps[currentIndex + 1]);\n  };\n  return (\n    <div>\n      <DataPrep />\n      {tables && (\n        <DropZone\n          maxSize={MAXIMUM_FILE_SIZE}\n          onDrop={handleDrop}\n          onDropRejected={handleDropRejected}\n          isSize=\"small\"\n        >\n          <span className=\"tech-info\">\n            Cick here to upload or drag and drop .xlsx, .csv file here(maximum\n            10MB)\n          </span>\n        </DropZone>\n      )}\n      {headerFeedback && headerFeedback.status === \"loading\" && (\n        <span>Validating Headers</span>\n      )}\n      {headerFeedback && headerFeedback.valid && (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <span className=\"has-text-success has-text-weight-bold\">\n            Headers of \"{flows.file.name}\" are valid\n          </span>\n          <Button isColor=\"info\" onClick={handleNextStep}>\n            Next Step\n          </Button>\n        </div>\n      )}\n      {headerFeedback &&\n        !headerFeedback.valid &&\n        headerFeedback.type === \"ERROR_HEADER\" && (\n          <div\n            style={{\n              textAlign: \"center\",\n            }}\n          >\n            <span className=\"has-text-danger has-text-weight-bold\">\n              Headers of \"{flows.file.name}\" do not match schema fields, please\n              fix your file and re-upload\n            </span>\n            <HeaderValidation\n              headerNames={headerFeedback.headerNames}\n              fieldNames={headerFeedback.fieldNames}\n            />\n          </div>\n        )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  schema: state.repoData.descriptor && getResourceSchema(state),\n  flows: state.flows,\n  tables: state.repoData.tables,\n  headerFeedback: state.schemaValidation.headerFeedback,\n  repoData: state.repoData,\n});\n\nexport default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader,\n  fetchAllTables,\n})(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants';\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let missingRows = [];\n                      if (field.errorType === 'ERROR_FORMAT' && (field.name==='reporting' || field.name === 'partner')) {\n                        missingRows = field.errors.map((error) => error.rowNumber);\n                      }\n                      if(columnIndex === 0) return (<div key={columnIndex} className=\"table-cell\">{field.name}</div>)\n                      else if(columnIndex === 1) return (<div key={columnIndex} className=\"table-cell\">{field.errorType}</div>)\n                      else return (\n                        <div key={columnIndex} className=\"table-cell\">\n                          <span>{distinctErrors} different invalid values, {totalErrors} rows affected in total</span>\n                          {missingRows.map((rowNumber)=> {\n                            return (<li className=\"has-text-danger\">missing value in row {rowNumber}</li>)\n                          })}\n                        </div>\n                      )\n                      \n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { findIndex } from \"lodash\";\n\nimport { Button } from \"design-workshop\";\nimport { setStep } from \"../../redux/modules/ui\";\nimport { startModification } from \"../../redux/modules/modification\";\n\nimport OverviewTable from \"../../components/OverviewTable\";\n\nimport {\n  validateTable,\n  getRelations,\n  getResourceSchema,\n  getGroupedErrors,\n} from \"../../redux/modules/schemaValidation\";\n\nclass SchemaValidation extends React.Component {\n  componentDidMount() {\n    const { flows, schema, relations, schemaFeedback } = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({ source: flows, schema, relations });\n    }\n  }\n  render() {\n    const { schemaFeedback, modificationList, steps, selectedStep } =\n      this.props;\n    let isRequiredFieldMissing = false;\n    if (schemaFeedback && schemaFeedback.collectedErrors) {\n      isRequiredFieldMissing =\n        (schemaFeedback.collectedErrors[\"reporting\"] &&\n          schemaFeedback.collectedErrors[\"reporting\"].errorType ===\n            \"ERROR_FORMAT\") ||\n        (schemaFeedback.collectedErrors[\"partner\"] &&\n          schemaFeedback.collectedErrors[\"partner\"].errorType ===\n            \"ERROR_FORMAT\");\n    }\n    const handlePrevStep = () => {\n      const currentIndex = findIndex(steps, selectedStep);\n      this.props.setStep(steps[currentIndex - 1]);\n    };\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const groupedErrors = getGroupedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(groupedErrors);\n      }\n      const currentIndex = findIndex(steps, selectedStep);\n      this.props.setStep(steps[currentIndex + 1]);\n    };\n    return (\n      <div>\n        {schemaFeedback && schemaFeedback.status === \"loading\" && (\n          <span>{schemaFeedback.loader}</span>\n        )}\n        <div>\n          {schemaFeedback &&\n            !schemaFeedback.valid &&\n            schemaFeedback.collectedErrors && (\n              <>\n                <span className=\"has-text-danger has-text-weight-bold\">\n                  Found errors in {schemaFeedback.errors.length} rows of{\" \"}\n                  {Object.keys(schemaFeedback.collectedErrors).length} fields\n                  {isRequiredFieldMissing && (\n                    <span>\n                      , value of required field is missing, please fix it\n                      locally first\n                    </span>\n                  )}\n                </span>\n                <OverviewTable\n                  collectedErrors={schemaFeedback.collectedErrors}\n                />\n              </>\n            )}\n          {schemaFeedback && schemaFeedback.valid && (\n            <span className=\"has-text-success has-text-weight-bold\">\n              Flows data is valid\n            </span>\n          )}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Button isColor=\"info\" onClick={handlePrevStep}>\n              Previous Step\n            </Button>\n            {schemaFeedback &&\n              !schemaFeedback.valid &&\n              schemaFeedback.collectedErrors && (\n                <Button\n                  isColor=\"info\"\n                  isDisabled={isRequiredFieldMissing}\n                  onClick={handleNextStep}\n                >\n                  Review Errors\n                </Button>\n              )}\n            {schemaFeedback && schemaFeedback.valid && (\n              <Button\n                isColor=\"info\"\n                isDisabled={isRequiredFieldMissing}\n                onClick={() => this.props.setStep(steps[3])}\n              >\n                Publish\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  relations: getRelations(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList,\n});\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);\n","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport {\n  Button,\n  Field,\n  Control\n} from 'design-workshop';\n\nimport {\n  Modal,\n  ModalBackground,\n  ModalClose,\n  ModalCard,\n  ModalCardBody,\n} from 'bloomer';\n\nimport {downloadTable} from '../utils/fileExporter';\nconst LeaveModificationModal = ({\n  originalLength,\n  referenceTables,\n  onSelectDiscard, \n  onSelectDownload,\n  isActive,\n  closeModal\n}) => {\n  let updatedTables = [];\n  if (referenceTables) {\n    Object.keys(referenceTables).forEach((name) => {\n      if (referenceTables[name].length !== originalLength[name]) {\n        updatedTables.push({\n          name,\n          updatedRows: referenceTables[name].slice(originalLength[name])\n        })\n      }\n    });\n  }\n\n  return (\n    <Modal isActive={isActive}>\n      <ModalBackground onClick={closeModal} />\n      <ModalCard>\n        <ModalCardBody>\n          <div style={{\n          textAlign:'center'\n          }}>\n              <h5 className=\"title is-5\">Leave this step, you might lost your modification?</h5>\n              {updatedTables.length>0 && <p>updated reference tables</p>}\n              {\n                updatedTables.map((table, i)=>{\n                  const handleExportTable = () => {\n                    downloadTable(referenceTables[table.name], table.name, 'csv')\n                  }\n                  return (\n                    <div key={i}>\n                      <a href=\"#\" onClick={handleExportTable}>{table.name} table: {table.updatedRows.length} rows added</a>\n                    </div>\n                  )\n                })\n              }\n              <Field isGrouped>\n                <Control>\n                  <Button onClick={onSelectDownload} isColor=\"success\">Download fixed flows</Button>\n                </Control>\n                <Control>\n                  <Button onClick={onSelectDiscard} isColor=\"danger\">Discard</Button>\n                </Control>\n                <Control>\n                  <Button onClick={closeModal} isColor=\"info\">Cancel</Button>\n                </Control>\n            </Field>\n            </div>\n        </ModalCardBody>\n      </ModalCard>\n      <ModalClose onClick={closeModal} />\n    </Modal>\n  )\n}\n\nexport default LeaveModificationModal","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\nimport FileUpload from './containers/FileUpload';\n\n\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport {downloadFlow} from './utils/fileExporter';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep,\n  showModal,\n  hideModal\n} from './redux/modules/ui';\n\nimport LeaveModificationModal from './components/LeaveModificationModal';\n\nconst App = ({\n  steps,\n  isModalDisplay,\n  selectedStep,\n  repoData,\n  flows,\n  referenceTables,\n  originalLength,\n  modificationList,\n  //actions\n  setStep,\n  showModal,\n  hideModal\n}) => {\n\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  const handleExport = () => {\n    const {file, data} = flows;\n    downloadFlow(data, `${file.name}_ongoing_corrections`, 'csv')\n  }\n\n  const handleSetStep = (step) => {\n    const {remoteUpdateStatus} = repoData;\n    let fixed\n    if (modificationList) {\n      fixed = modificationList.filter((item) => item.fixed)\n    }\n    if(fixed && step.id === '0' && remoteUpdateStatus !== 'updated') showModal();\n    else setStep(step)\n  }\n\n  const handleDiscard = () => {\n    setStep(steps[0]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Layout \n        steps={steps}\n        selectedStep={selectedStep}\n        onSetStep={handleSetStep}>\n        {renderChildren()}\n      </Layout>\n      <LeaveModificationModal\n        referenceTables={referenceTables}\n        originalLength={originalLength}\n        isActive={isModalDisplay}\n        onSelectDiscard={handleDiscard}\n        onSelectDownload={handleExport}\n        closeModal={hideModal} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  isModalDisplay: state.ui.isModalDisplay,\n  flows: state.flows,\n  referenceTables: state.referenceTables.referenceTables,\n  originalLength: state.referenceTables.originalLength,\n  selectedStep: state.ui.selectedStep,\n  modificationList: state.modification.modificationList,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  showModal,\n  hideModal,\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport referenceTables from './modules/referenceTables';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  flows,\n  referenceTables,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}